{"version":3,"file":"/home/codex-coder/Documents/projects/ceasar-cypher/isbn13.ts","sources":["/home/codex-coder/Documents/projects/ceasar-cypher/isbn13.ts"],"names":[],"mappings":";;;AAAO,MAAM,MAAM,GAAG,CAAC,GAA8B,EAAE,EAAE;IACzD,IAAI,OAAO,GAAG,KAAK,CAAA;IACf,IAAG,GAAG,CAAC,MAAM,KAAK,EAAE,EAAC;QAEjB,IAAI,KAAK,GAAG,EAAE,CAAC;QACf,IAAI,KAAK,GAAE,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,CAAC,KAAK,CAAC,MAAM,GAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAC,CAAC,CAAC,GAAI,EAAE,CAAC,CAAC,CAAA,IAAI,CAAC;QAClE,IAAI,YAAY,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,EAAM,EAAE,EAAE,CAAC,EAAE,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAA;QAE3D,YAAY,CAAC,OAAO,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAA;QAC3B,IAAI,UAAU,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC,EAAM,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,OAAO,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,CAAC,CAAA,CAAC,CAAE,CAAC;QAEjF,wBAAwB;QAExB,2GAA2G;QAC3G,YAAY,CAAC,YAAY,CAAC,MAAM,GAAE,CAAC,CAAC,GAAK,CAAC,EAAE,GAAE,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAK,EAAC,CAAK,EAAE,EAAE,CAAA,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,GAAE,CAAC,CAAA,CAAC,sBAAsB;QAC/H,IAAI,SAAS,GAAG,YAAY,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,IAAI,EAAC,EAAE,CAAC,CAAC;QAEzD,OAAO,UAAU,CAAC,MAAM,CAAC,CAAC,CAAK,EAAC,CAAK,EAAC,EAAE,CAAA,CAAC,GAAG,CAAC,CAAC,GAAE,EAAE,KAAK,CAAC,CAAC,CAAC,CAAE,SAAS,CAAA,CAAC,CAAA,SAAS,CAAA;KAG9E;SAAI;QACD,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAA;KAChB;AAEL,CAAC,CAAC;AAzBW,QAAA,MAAM,UAyBjB;AAGF,OAAO,CAAC,GAAG,CAAC,IAAA,cAAM,EAAC,eAAe,CAAC,CAAC,CAAA;AACpC,OAAO,CAAC,GAAG,CAAC,IAAA,cAAM,EAAC,eAAe,CAAC,CAAC,CAAA","sourcesContent":["export const isbn13 = (str: string | Array<any> | any) => {\nlet i13Bool = false\n    if(str.length === 13){\n        \n        let count = 10;\n        let str10= str.split(\"\");\n        str10[str10.length-1] === \"X\" ? str10[str10.length-1] =  10 :null;\n        let convertedstr = str10.map((el:any) => el = parseInt(el))\n        \n        convertedstr.unshift(9,7,8)\n        let checkDigit = convertedstr.map((el:any) => el *= (i13Bool = !i13Bool) ? 1:3 );\n        \n        //  console.log(i13Bool)\n        \n        //  convertedstr.map((el:any)=> el * count--).reduce((a:any,b:any)=>a + b) % 11 === 0 ?  \"Valid\":\"Invalid\";\n        convertedstr[convertedstr.length -1] =   (10 -(convertedstr.reduce((a:any,b:any) =>a + b) % 10)) % 10 /2 //(10 - (c % 10)) % 10\n        let resultStr = convertedstr.join().replace(/,/g,\"\");\n            \n    return checkDigit.reduce((a:any,b:any)=>a + b)% 10 === 0 ?  resultStr:\"Invalid\"\n    \n        \n    }else{\n        str.split(\"\")\n    }\n    \n};\n\n\nconsole.log(isbn13(\"9780316066525\"))\nconsole.log(isbn13(\"9783866155237\"))\n"]}
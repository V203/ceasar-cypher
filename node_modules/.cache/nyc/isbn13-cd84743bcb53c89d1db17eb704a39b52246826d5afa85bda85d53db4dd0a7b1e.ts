"use strict";function cov_1az1wpajte(){var path="/home/codex-coder/Documents/projects/ceasar-cypher/isbn13.ts";var hash="e965c27fda06584ef204729d341515272cf945c0";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/codex-coder/Documents/projects/ceasar-cypher/isbn13.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:0},end:{line:3,column:24}},"2":{start:{line:4,column:15},end:{line:40,column:1}},"3":{start:{line:5,column:18},end:{line:5,column:23}},"4":{start:{line:6,column:18},end:{line:6,column:23}},"5":{start:{line:7,column:4},end:{line:39,column:5}},"6":{start:{line:8,column:8},end:{line:8,column:28}},"7":{start:{line:9,column:8},end:{line:9,column:94}},"8":{start:{line:9,column:30},end:{line:9,column:42}},"9":{start:{line:9,column:63},end:{line:9,column:92}},"10":{start:{line:10,column:8},end:{line:10,column:60}},"11":{start:{line:10,column:39},end:{line:10,column:44}},"12":{start:{line:11,column:8},end:{line:11,column:45}},"13":{start:{line:13,column:9},end:{line:39,column:5}},"14":{start:{line:14,column:26},end:{line:14,column:28}},"15":{start:{line:15,column:25},end:{line:15,column:30}},"16":{start:{line:16,column:8},end:{line:35,column:9}},"17":{start:{line:16,column:38},end:{line:16,column:66}},"18":{start:{line:16,column:85},end:{line:16,column:90}},"19":{start:{line:17,column:31},end:{line:17,column:33}},"20":{start:{line:19,column:12},end:{line:19,column:30}},"21":{start:{line:20,column:12},end:{line:20,column:32}},"22":{start:{line:22,column:12},end:{line:25,column:13}},"23":{start:{line:22,column:29},end:{line:22,column:30}},"24":{start:{line:23,column:16},end:{line:23,column:41}},"25":{start:{line:24,column:16},end:{line:24,column:84}},"26":{start:{line:27,column:22},end:{line:27,column:58}},"27":{start:{line:27,column:52},end:{line:27,column:57}},"28":{start:{line:29,column:29},end:{line:29,column:51}},"29":{start:{line:30,column:12},end:{line:30,column:36}},"30":{start:{line:32,column:12},end:{line:32,column:49}},"31":{start:{line:34,column:12},end:{line:34,column:47}},"32":{start:{line:41,column:0},end:{line:41,column:24}},"33":{start:{line:42,column:28},end:{line:51,column:1}},"34":{start:{line:43,column:23},end:{line:43,column:49}},"35":{start:{line:45,column:27},end:{line:45,column:94}},"36":{start:{line:45,column:60},end:{line:45,column:93}},"37":{start:{line:47,column:16},end:{line:47,column:54}},"38":{start:{line:47,column:48},end:{line:47,column:53}},"39":{start:{line:49,column:23},end:{line:49,column:45}},"40":{start:{line:50,column:4},end:{line:50,column:33}},"41":{start:{line:52,column:0},end:{line:52,column:47}},"42":{start:{line:55,column:26},end:{line:66,column:1}},"43":{start:{line:57,column:4},end:{line:57,column:38}},"44":{start:{line:59,column:25},end:{line:59,column:30}},"45":{start:{line:60,column:4},end:{line:60,column:37}},"46":{start:{line:61,column:19},end:{line:61,column:53}},"47":{start:{line:62,column:4},end:{line:62,column:24}},"48":{start:{line:64,column:23},end:{line:64,column:50}},"49":{start:{line:65,column:4},end:{line:65,column:31}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:4,column:15},end:{line:4,column:16}},loc:{start:{line:4,column:24},end:{line:40,column:1}},line:4},"1":{name:"(anonymous_1)",decl:{start:{line:9,column:22},end:{line:9,column:23}},loc:{start:{line:9,column:30},end:{line:9,column:42}},line:9},"2":{name:"(anonymous_2)",decl:{start:{line:9,column:48},end:{line:9,column:49}},loc:{start:{line:9,column:63},end:{line:9,column:92}},line:9},"3":{name:"(anonymous_3)",decl:{start:{line:10,column:29},end:{line:10,column:30}},loc:{start:{line:10,column:39},end:{line:10,column:44}},line:10},"4":{name:"(anonymous_4)",decl:{start:{line:16,column:30},end:{line:16,column:31}},loc:{start:{line:16,column:38},end:{line:16,column:66}},line:16},"5":{name:"(anonymous_5)",decl:{start:{line:16,column:75},end:{line:16,column:76}},loc:{start:{line:16,column:85},end:{line:16,column:90}},line:16},"6":{name:"(anonymous_6)",decl:{start:{line:27,column:42},end:{line:27,column:43}},loc:{start:{line:27,column:52},end:{line:27,column:57}},line:27},"7":{name:"(anonymous_7)",decl:{start:{line:42,column:28},end:{line:42,column:29}},loc:{start:{line:42,column:38},end:{line:51,column:1}},line:42},"8":{name:"(anonymous_8)",decl:{start:{line:45,column:42},end:{line:45,column:43}},loc:{start:{line:45,column:60},end:{line:45,column:93}},line:45},"9":{name:"(anonymous_9)",decl:{start:{line:47,column:38},end:{line:47,column:39}},loc:{start:{line:47,column:48},end:{line:47,column:53}},line:47},"10":{name:"(anonymous_10)",decl:{start:{line:55,column:26},end:{line:55,column:27}},loc:{start:{line:55,column:38},end:{line:66,column:1}},line:55}},branchMap:{"0":{loc:{start:{line:7,column:4},end:{line:39,column:5}},type:"if",locations:[{start:{line:7,column:4},end:{line:39,column:5}},{start:{line:7,column:4},end:{line:39,column:5}}],line:7},"1":{loc:{start:{line:9,column:69},end:{line:9,column:91}},type:"cond-expr",locations:[{start:{line:9,column:86},end:{line:9,column:87}},{start:{line:9,column:90},end:{line:9,column:91}}],line:9},"2":{loc:{start:{line:11,column:15},end:{line:11,column:44}},type:"cond-expr",locations:[{start:{line:11,column:25},end:{line:11,column:32}},{start:{line:11,column:35},end:{line:11,column:44}}],line:11},"3":{loc:{start:{line:13,column:9},end:{line:39,column:5}},type:"if",locations:[{start:{line:13,column:9},end:{line:39,column:5}},{start:{line:13,column:9},end:{line:39,column:5}}],line:13},"4":{loc:{start:{line:16,column:8},end:{line:35,column:9}},type:"if",locations:[{start:{line:16,column:8},end:{line:35,column:9}},{start:{line:16,column:8},end:{line:35,column:9}}],line:16},"5":{loc:{start:{line:24,column:63},end:{line:24,column:81}},type:"cond-expr",locations:[{start:{line:24,column:76},end:{line:24,column:77}},{start:{line:24,column:80},end:{line:24,column:81}}],line:24},"6":{loc:{start:{line:45,column:69},end:{line:45,column:92}},type:"cond-expr",locations:[{start:{line:45,column:87},end:{line:45,column:88}},{start:{line:45,column:91},end:{line:45,column:92}}],line:45}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},inputSourceMap:{version:3,file:"/home/codex-coder/Documents/projects/ceasar-cypher/isbn13.ts",sources:["/home/codex-coder/Documents/projects/ceasar-cypher/isbn13.ts"],names:[],mappings:"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",sourcesContent:["export const isbn13 = (str: string | Array<any> | any) => {\n    let i13Bool = false\n    let isValid = false;\n    if (str.length === 13) {\n        str = str.split(\"\");\n        str = str.map((el: any) => parseInt(el)).map((el: any, index: any) => el * (index % 2 == 0 ? 1 : 3));\n        isValid = str.reduce((a: any, b: any) => a + b, 0) % 10 === 0;\n        return isValid ? \"Valid\" : \"Invalid\";\n\n    } else if (str.length === 10) {\n        let counterFake = 11;\n        let weightBool = false\n        if (str.split(\"\").map((el: any) => parseInt(el) * counterFake--).reduce((a: any, b: any) => a + b) % 11 === 0) {\n            var strContainer:Array<any> = [];\n            // console.log(str);\n            str = \"978\" + str\n            \n            str = str.split(\"\");\n            // console.log(str.length);\n            \n            for (let index = 0; index < str.length; index++) {\n                weightBool = !weightBool;\n                strContainer[index] = (parseInt(str[index]) * (weightBool ? 1 : 3));\n            }\n            // console.log(strContainer);\n            \n            let sum = strContainer.reduce((a, b) => a + b);\n            // console.log(sum)\n            let checkDigit = (10 - (sum % 10)) % 10 ;\n            console.log(checkDigit);\n            // console.log(str);\n            str = str.join(\"\").replace(/,/g, \"\");\n            // str + checkDigit.toString()\n         return   str+ checkDigit.toString()\n        } \n\n\n        // console.log(str.map((el: any) => parseInt(el) * counterFake--).reduce((a: any, b: any) => a + b));\n\n        // console.log(strContainer.reduce((a: any, b: any) => a + b) % 10 === 0);\n\n        // console.log(sum);\n\n\n\n\n    }\n\n\n\n};\nconst calculateCheckDigit = (isbn: string) => {\n    const digitArray = isbn.split(\"\").map(Number); // Convert ISBN string to an array of digits\n  \n    // Multiply each digit by its corresponding weight (1 or 3)\n    const weightedDigits = digitArray.map((digit: number, index: number) => digit * (index % 2 === 0 ? 1 : 3));\n  \n    // Calculate the sum of all the weighted digits\n    const sum = weightedDigits.reduce((a, b) => a + b);\n  \n    // Calculate the check digit\n    const checkDigit = (10 - (sum % 10)) % 10;\n  \n    return checkDigit.toString()\n}\n\nconsole.log(isbn13(\"3866155239\"))\n\n// console.log(isbn13(\"3866155237\"))\n\n// console.log(calculateCheckDigit(\"9783866155237\"));\n\n\nconst convertISBN10to13 = (isbn10: string) => {\n    // Remove any hyphens from ISBN-10\n    isbn10 = isbn10.replace(/-/g, '');\n  \n    // Add the prefix \"978\" to the beginning\n    const isbn13Prefix = \"978\";\n    console.log(isbn10.slice(0, -1));\n    \n    const isbn13 = isbn13Prefix + isbn10.slice(0, -1);\n  console.log(isbn13);\n  \n    // Calculate the check digit for ISBN-13\n    const checkDigit = calculateCheckDigit(isbn13);\n  \n    return isbn13 + checkDigit;\n  }\n\n\n//   console.log(convertISBN10to13(\"0316066524\"));\n  "]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"e965c27fda06584ef204729d341515272cf945c0"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1az1wpajte=function(){return actualCoverage;};}return actualCoverage;}cov_1az1wpajte();cov_1az1wpajte().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_1az1wpajte().s[1]++;exports.isbn13=void 0;cov_1az1wpajte().s[2]++;const isbn13=str=>{cov_1az1wpajte().f[0]++;let i13Bool=(cov_1az1wpajte().s[3]++,false);let isValid=(cov_1az1wpajte().s[4]++,false);cov_1az1wpajte().s[5]++;if(str.length===13){cov_1az1wpajte().b[0][0]++;cov_1az1wpajte().s[6]++;str=str.split("");cov_1az1wpajte().s[7]++;str=str.map(el=>{cov_1az1wpajte().f[1]++;cov_1az1wpajte().s[8]++;return parseInt(el);}).map((el,index)=>{cov_1az1wpajte().f[2]++;cov_1az1wpajte().s[9]++;return el*(index%2==0?(cov_1az1wpajte().b[1][0]++,1):(cov_1az1wpajte().b[1][1]++,3));});cov_1az1wpajte().s[10]++;isValid=str.reduce((a,b)=>{cov_1az1wpajte().f[3]++;cov_1az1wpajte().s[11]++;return a+b;},0)%10===0;cov_1az1wpajte().s[12]++;return isValid?(cov_1az1wpajte().b[2][0]++,"Valid"):(cov_1az1wpajte().b[2][1]++,"Invalid");}else{cov_1az1wpajte().b[0][1]++;cov_1az1wpajte().s[13]++;if(str.length===10){cov_1az1wpajte().b[3][0]++;let counterFake=(cov_1az1wpajte().s[14]++,11);let weightBool=(cov_1az1wpajte().s[15]++,false);cov_1az1wpajte().s[16]++;if(str.split("").map(el=>{cov_1az1wpajte().f[4]++;cov_1az1wpajte().s[17]++;return parseInt(el)*counterFake--;}).reduce((a,b)=>{cov_1az1wpajte().f[5]++;cov_1az1wpajte().s[18]++;return a+b;})%11===0){cov_1az1wpajte().b[4][0]++;var strContainer=(cov_1az1wpajte().s[19]++,[]);// console.log(str);
cov_1az1wpajte().s[20]++;str="978"+str;cov_1az1wpajte().s[21]++;str=str.split("");// console.log(str.length);
cov_1az1wpajte().s[22]++;for(let index=(cov_1az1wpajte().s[23]++,0);index<str.length;index++){cov_1az1wpajte().s[24]++;weightBool=!weightBool;cov_1az1wpajte().s[25]++;strContainer[index]=parseInt(str[index])*(weightBool?(cov_1az1wpajte().b[5][0]++,1):(cov_1az1wpajte().b[5][1]++,3));}// console.log(strContainer);
let sum=(cov_1az1wpajte().s[26]++,strContainer.reduce((a,b)=>{cov_1az1wpajte().f[6]++;cov_1az1wpajte().s[27]++;return a+b;}));// console.log(sum)
let checkDigit=(cov_1az1wpajte().s[28]++,(10-sum%10)%10);cov_1az1wpajte().s[29]++;console.log(checkDigit);// console.log(str);
cov_1az1wpajte().s[30]++;str=str.join("").replace(/,/g,"");// str + checkDigit.toString()
cov_1az1wpajte().s[31]++;return str+checkDigit.toString();}else{cov_1az1wpajte().b[4][1]++;}// console.log(str.map((el: any) => parseInt(el) * counterFake--).reduce((a: any, b: any) => a + b));
// console.log(strContainer.reduce((a: any, b: any) => a + b) % 10 === 0);
// console.log(sum);
}else{cov_1az1wpajte().b[3][1]++;}}};cov_1az1wpajte().s[32]++;exports.isbn13=isbn13;cov_1az1wpajte().s[33]++;const calculateCheckDigit=isbn=>{cov_1az1wpajte().f[7]++;const digitArray=(cov_1az1wpajte().s[34]++,isbn.split("").map(Number));// Convert ISBN string to an array of digits
// Multiply each digit by its corresponding weight (1 or 3)
const weightedDigits=(cov_1az1wpajte().s[35]++,digitArray.map((digit,index)=>{cov_1az1wpajte().f[8]++;cov_1az1wpajte().s[36]++;return digit*(index%2===0?(cov_1az1wpajte().b[6][0]++,1):(cov_1az1wpajte().b[6][1]++,3));}));// Calculate the sum of all the weighted digits
const sum=(cov_1az1wpajte().s[37]++,weightedDigits.reduce((a,b)=>{cov_1az1wpajte().f[9]++;cov_1az1wpajte().s[38]++;return a+b;}));// Calculate the check digit
const checkDigit=(cov_1az1wpajte().s[39]++,(10-sum%10)%10);cov_1az1wpajte().s[40]++;return checkDigit.toString();};cov_1az1wpajte().s[41]++;console.log((0,exports.isbn13)("3866155239"));// console.log(isbn13("3866155237"))
// console.log(calculateCheckDigit("9783866155237"));
cov_1az1wpajte().s[42]++;const convertISBN10to13=isbn10=>{cov_1az1wpajte().f[10]++;cov_1az1wpajte().s[43]++;// Remove any hyphens from ISBN-10
isbn10=isbn10.replace(/-/g,'');// Add the prefix "978" to the beginning
const isbn13Prefix=(cov_1az1wpajte().s[44]++,"978");cov_1az1wpajte().s[45]++;console.log(isbn10.slice(0,-1));const isbn13=(cov_1az1wpajte().s[46]++,isbn13Prefix+isbn10.slice(0,-1));cov_1az1wpajte().s[47]++;console.log(isbn13);// Calculate the check digit for ISBN-13
const checkDigit=(cov_1az1wpajte().s[48]++,calculateCheckDigit(isbn13));cov_1az1wpajte().s[49]++;return isbn13+checkDigit;};//   console.log(convertISBN10to13("0316066524"));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
"use strict";function cov_1az1wpajte(){var path="/home/codex-coder/Documents/projects/ceasar-cypher/isbn13.ts";var hash="e352033020ce6f6bd9dea25df96a2d15b9eec841";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/codex-coder/Documents/projects/ceasar-cypher/isbn13.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:0},end:{line:3,column:24}},"2":{start:{line:4,column:13},end:{line:8,column:1}},"3":{start:{line:5,column:16},end:{line:5,column:29}},"4":{start:{line:6,column:16},end:{line:6,column:29}},"5":{start:{line:7,column:4},end:{line:7,column:23}},"6":{start:{line:9,column:0},end:{line:9,column:24}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:4,column:13},end:{line:4,column:14}},loc:{start:{line:4,column:22},end:{line:8,column:1}},line:4}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},f:{"0":0},b:{},inputSourceMap:{version:3,file:"/home/codex-coder/Documents/projects/ceasar-cypher/isbn13.ts",sources:["/home/codex-coder/Documents/projects/ceasar-cypher/isbn13.ts"],names:[],mappings:";;;AAAO,IAAI,MAAM,GAAG,CAAC,GAA6B,EAAE,EAAE;IAElD,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IAC1B,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IAG1B,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;AAItB,CAAC,CAAA;AAVU,QAAA,MAAM,UAUhB;AACD,2BAA2B;AAC3B,6BAA6B;AAE7B,wDAAwD;AACxD,sBAAsB;AAEtB,IAAI;AAGJ,2BAA2B;AAE3B,oCAAoC;AACpC,2BAA2B;AAE3B,qCAAqC;AACrC,6BAA6B;AAE7B,2DAA2D;AAC3D,uCAAuC;AACvC,+EAA+E;AAE/E,4BAA4B;AAE5B,QAAQ;AAIR,kDAAkD;AAClD,6CAA6C;AAG7C,uCAAuC;AACvC,2CAA2C",sourcesContent:["export let isbn13 = (str: string | Array<any>| any) =>{\n\n    let str10 = str.split(\"\");\n    let str13 = str.split(\"\");\n\n\n    console.log(str13)\n\n   \n    \n}\n// console.log(str.length);\n// let str10 = str.split(\"\");\n\n// if(str10.reduce((a:any) => parseInt(a) ) % 11 ===0 ){\n//      return \"Valid\"\n\n// }\n\n    \n//     let strContainer =[]\n    \n//     str = \"978\" + str.slice(0,9);\n//     str = str.split(\"\");\n\n//     let weightBool:boolean = false\n//     if(str.length === 12){\n    \n//         for (let index = 0;str.length > index; index++){\n//             weightBool = !weightBool\n//             strContainer[index] =  parseInt(str[index]) * (weightBool ? 1:3)\n            \n//         }                \n        \n//     }\n    \n    \n\n//     let c = strContainer.reduce((a,b)=> a + b);\n//     let check_digit = (10 - (c % 10)) % 10\n    \n    \n//    str = str.join().replace(/,/g,\"\")\n//     return str + check_digit.toString();\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"e352033020ce6f6bd9dea25df96a2d15b9eec841"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1az1wpajte=function(){return actualCoverage;};}return actualCoverage;}cov_1az1wpajte();cov_1az1wpajte().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_1az1wpajte().s[1]++;exports.isbn13=void 0;cov_1az1wpajte().s[2]++;let isbn13=str=>{cov_1az1wpajte().f[0]++;let str10=(cov_1az1wpajte().s[3]++,str.split(""));let str13=(cov_1az1wpajte().s[4]++,str.split(""));cov_1az1wpajte().s[5]++;console.log(str13);};cov_1az1wpajte().s[6]++;exports.isbn13=isbn13;// console.log(str.length);
// let str10 = str.split("");
// if(str10.reduce((a:any) => parseInt(a) ) % 11 ===0 ){
//      return "Valid"
// }
//     let strContainer =[]
//     str = "978" + str.slice(0,9);
//     str = str.split("");
//     let weightBool:boolean = false
//     if(str.length === 12){
//         for (let index = 0;str.length > index; index++){
//             weightBool = !weightBool
//             strContainer[index] =  parseInt(str[index]) * (weightBool ? 1:3)
//         }                
//     }
//     let c = strContainer.reduce((a,b)=> a + b);
//     let check_digit = (10 - (c % 10)) % 10
//    str = str.join().replace(/,/g,"")
//     return str + check_digit.toString();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL2hvbWUvY29kZXgtY29kZXIvRG9jdW1lbnRzL3Byb2plY3RzL2NlYXNhci1jeXBoZXIvaXNibjEzLnRzIiwic291cmNlcyI6WyIvaG9tZS9jb2RleC1jb2Rlci9Eb2N1bWVudHMvcHJvamVjdHMvY2Vhc2FyLWN5cGhlci9pc2JuMTMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQU8sSUFBSSxNQUFNLEdBQUcsQ0FBQyxHQUE2QixFQUFFLEVBQUU7SUFFbEQsSUFBSSxLQUFLLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUMxQixJQUFJLEtBQUssR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBRzFCLE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUE7QUFJdEIsQ0FBQyxDQUFBO0FBVlUsUUFBQSxNQUFNLFVBVWhCO0FBQ0QsMkJBQTJCO0FBQzNCLDZCQUE2QjtBQUU3Qix3REFBd0Q7QUFDeEQsc0JBQXNCO0FBRXRCLElBQUk7QUFHSiwyQkFBMkI7QUFFM0Isb0NBQW9DO0FBQ3BDLDJCQUEyQjtBQUUzQixxQ0FBcUM7QUFDckMsNkJBQTZCO0FBRTdCLDJEQUEyRDtBQUMzRCx1Q0FBdUM7QUFDdkMsK0VBQStFO0FBRS9FLDRCQUE0QjtBQUU1QixRQUFRO0FBSVIsa0RBQWtEO0FBQ2xELDZDQUE2QztBQUc3Qyx1Q0FBdUM7QUFDdkMsMkNBQTJDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGxldCBpc2JuMTMgPSAoc3RyOiBzdHJpbmcgfCBBcnJheTxhbnk+fCBhbnkpID0+e1xuXG4gICAgbGV0IHN0cjEwID0gc3RyLnNwbGl0KFwiXCIpO1xuICAgIGxldCBzdHIxMyA9IHN0ci5zcGxpdChcIlwiKTtcblxuXG4gICAgY29uc29sZS5sb2coc3RyMTMpXG5cbiAgIFxuICAgIFxufVxuLy8gY29uc29sZS5sb2coc3RyLmxlbmd0aCk7XG4vLyBsZXQgc3RyMTAgPSBzdHIuc3BsaXQoXCJcIik7XG5cbi8vIGlmKHN0cjEwLnJlZHVjZSgoYTphbnkpID0+IHBhcnNlSW50KGEpICkgJSAxMSA9PT0wICl7XG4vLyAgICAgIHJldHVybiBcIlZhbGlkXCJcblxuLy8gfVxuXG4gICAgXG4vLyAgICAgbGV0IHN0ckNvbnRhaW5lciA9W11cbiAgICBcbi8vICAgICBzdHIgPSBcIjk3OFwiICsgc3RyLnNsaWNlKDAsOSk7XG4vLyAgICAgc3RyID0gc3RyLnNwbGl0KFwiXCIpO1xuXG4vLyAgICAgbGV0IHdlaWdodEJvb2w6Ym9vbGVhbiA9IGZhbHNlXG4vLyAgICAgaWYoc3RyLmxlbmd0aCA9PT0gMTIpe1xuICAgIFxuLy8gICAgICAgICBmb3IgKGxldCBpbmRleCA9IDA7c3RyLmxlbmd0aCA+IGluZGV4OyBpbmRleCsrKXtcbi8vICAgICAgICAgICAgIHdlaWdodEJvb2wgPSAhd2VpZ2h0Qm9vbFxuLy8gICAgICAgICAgICAgc3RyQ29udGFpbmVyW2luZGV4XSA9ICBwYXJzZUludChzdHJbaW5kZXhdKSAqICh3ZWlnaHRCb29sID8gMTozKVxuICAgICAgICAgICAgXG4vLyAgICAgICAgIH0gICAgICAgICAgICAgICAgXG4gICAgICAgIFxuLy8gICAgIH1cbiAgICBcbiAgICBcblxuLy8gICAgIGxldCBjID0gc3RyQ29udGFpbmVyLnJlZHVjZSgoYSxiKT0+IGEgKyBiKTtcbi8vICAgICBsZXQgY2hlY2tfZGlnaXQgPSAoMTAgLSAoYyAlIDEwKSkgJSAxMFxuICAgIFxuICAgIFxuLy8gICAgc3RyID0gc3RyLmpvaW4oKS5yZXBsYWNlKC8sL2csXCJcIilcbi8vICAgICByZXR1cm4gc3RyICsgY2hlY2tfZGlnaXQudG9TdHJpbmcoKTtcbiJdfQ==
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMWF6MXdwYWp0ZSIsImFjdHVhbENvdmVyYWdlIiwicyIsImlzYm4xMyIsInN0ciIsImYiLCJzdHIxMCIsInNwbGl0Iiwic3RyMTMiLCJjb25zb2xlIiwibG9nIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIi9ob21lL2NvZGV4LWNvZGVyL0RvY3VtZW50cy9wcm9qZWN0cy9jZWFzYXItY3lwaGVyL2lzYm4xMy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgbGV0IGlzYm4xMyA9IChzdHI6IHN0cmluZyB8IEFycmF5PGFueT58IGFueSkgPT57XG5cbiAgICBsZXQgc3RyMTAgPSBzdHIuc3BsaXQoXCJcIik7XG4gICAgbGV0IHN0cjEzID0gc3RyLnNwbGl0KFwiXCIpO1xuXG5cbiAgICBjb25zb2xlLmxvZyhzdHIxMylcblxuICAgXG4gICAgXG59XG4vLyBjb25zb2xlLmxvZyhzdHIubGVuZ3RoKTtcbi8vIGxldCBzdHIxMCA9IHN0ci5zcGxpdChcIlwiKTtcblxuLy8gaWYoc3RyMTAucmVkdWNlKChhOmFueSkgPT4gcGFyc2VJbnQoYSkgKSAlIDExID09PTAgKXtcbi8vICAgICAgcmV0dXJuIFwiVmFsaWRcIlxuXG4vLyB9XG5cbiAgICBcbi8vICAgICBsZXQgc3RyQ29udGFpbmVyID1bXVxuICAgIFxuLy8gICAgIHN0ciA9IFwiOTc4XCIgKyBzdHIuc2xpY2UoMCw5KTtcbi8vICAgICBzdHIgPSBzdHIuc3BsaXQoXCJcIik7XG5cbi8vICAgICBsZXQgd2VpZ2h0Qm9vbDpib29sZWFuID0gZmFsc2Vcbi8vICAgICBpZihzdHIubGVuZ3RoID09PSAxMil7XG4gICAgXG4vLyAgICAgICAgIGZvciAobGV0IGluZGV4ID0gMDtzdHIubGVuZ3RoID4gaW5kZXg7IGluZGV4Kyspe1xuLy8gICAgICAgICAgICAgd2VpZ2h0Qm9vbCA9ICF3ZWlnaHRCb29sXG4vLyAgICAgICAgICAgICBzdHJDb250YWluZXJbaW5kZXhdID0gIHBhcnNlSW50KHN0cltpbmRleF0pICogKHdlaWdodEJvb2wgPyAxOjMpXG4gICAgICAgICAgICBcbi8vICAgICAgICAgfSAgICAgICAgICAgICAgICBcbiAgICAgICAgXG4vLyAgICAgfVxuICAgIFxuICAgIFxuXG4vLyAgICAgbGV0IGMgPSBzdHJDb250YWluZXIucmVkdWNlKChhLGIpPT4gYSArIGIpO1xuLy8gICAgIGxldCBjaGVja19kaWdpdCA9ICgxMCAtIChjICUgMTApKSAlIDEwXG4gICAgXG4gICAgXG4vLyAgICBzdHIgPSBzdHIuam9pbigpLnJlcGxhY2UoLywvZyxcIlwiKVxuLy8gICAgIHJldHVybiBzdHIgKyBjaGVja19kaWdpdC50b1N0cmluZygpO1xuIl0sIm1hcHBpbmdzIjoiaXlGQXNCQTtBQUFBQSxjQUFBLFNBQUFBLENBQUEsU0FBQUMsY0FBQSxXQUFBQSxjQUFBLEVBQUFELGNBQUEsR0FBQUEsY0FBQSxHQUFBRSxDQUFBLE0sK0hBdEJPLEdBQUksQ0FBQUMsTUFBTSxDQUFJQyxHQUE2QixFQUFJLENBQUFKLGNBQUEsR0FBQUssQ0FBQSxNQUVsRCxHQUFJLENBQUFDLEtBQUssRUFBQU4sY0FBQSxHQUFBRSxDQUFBLE1BQUdFLEdBQUcsQ0FBQ0csS0FBSyxDQUFDLEVBQUUsQ0FBQyxFQUN6QixHQUFJLENBQUFDLEtBQUssRUFBQVIsY0FBQSxHQUFBRSxDQUFBLE1BQUdFLEdBQUcsQ0FBQ0csS0FBSyxDQUFDLEVBQUUsQ0FBQyxFQUFDUCxjQUFBLEdBQUFFLENBQUEsTUFHMUJPLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDRixLQUFLLENBQUMsQ0FJdEIsQ0FBQyxDQUFBUixjQUFBLEdBQUFFLENBQUEsTUFWVVMsT0FBQSxDQUFBUixNQUFNLENBQUFBLE1BQUEsQ0FXakI7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUdBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBSUE7QUFDQTtBQUdBO0FBQ0EifQ==
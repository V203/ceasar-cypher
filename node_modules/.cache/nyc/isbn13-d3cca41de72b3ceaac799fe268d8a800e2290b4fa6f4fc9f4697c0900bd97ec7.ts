"use strict";function cov_1az1wpajte(){var path="/home/codex-coder/Documents/projects/ceasar-cypher/isbn13.ts";var hash="e0264ac926c583d4266fac1d03a4f9f9b5946845";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/codex-coder/Documents/projects/ceasar-cypher/isbn13.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:0},end:{line:3,column:24}},"2":{start:{line:4,column:15},end:{line:56,column:1}},"3":{start:{line:5,column:18},end:{line:5,column:23}},"4":{start:{line:6,column:18},end:{line:6,column:23}},"5":{start:{line:7,column:4},end:{line:27,column:5}},"6":{start:{line:8,column:8},end:{line:8,column:28}},"7":{start:{line:9,column:8},end:{line:9,column:94}},"8":{start:{line:9,column:30},end:{line:9,column:42}},"9":{start:{line:9,column:63},end:{line:9,column:92}},"10":{start:{line:10,column:8},end:{line:10,column:60}},"11":{start:{line:10,column:39},end:{line:10,column:44}},"12":{start:{line:11,column:8},end:{line:11,column:45}},"13":{start:{line:13,column:9},end:{line:27,column:5}},"14":{start:{line:14,column:27},end:{line:14,column:29}},"15":{start:{line:15,column:25},end:{line:15,column:30}},"16":{start:{line:16,column:8},end:{line:16,column:38}},"17":{start:{line:17,column:8},end:{line:17,column:28}},"18":{start:{line:18,column:8},end:{line:21,column:9}},"19":{start:{line:18,column:25},end:{line:18,column:26}},"20":{start:{line:19,column:12},end:{line:19,column:37}},"21":{start:{line:20,column:12},end:{line:20,column:78}},"22":{start:{line:22,column:18},end:{line:22,column:54}},"23":{start:{line:22,column:48},end:{line:22,column:53}},"24":{start:{line:23,column:8},end:{line:23,column:25}},"25":{start:{line:24,column:25},end:{line:24,column:47}},"26":{start:{line:25,column:8},end:{line:25,column:45}},"27":{start:{line:26,column:8},end:{line:26,column:43}},"28":{start:{line:57,column:0},end:{line:57,column:24}},"29":{start:{line:58,column:0},end:{line:58,column:47}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:4,column:15},end:{line:4,column:16}},loc:{start:{line:4,column:24},end:{line:56,column:1}},line:4},"1":{name:"(anonymous_1)",decl:{start:{line:9,column:22},end:{line:9,column:23}},loc:{start:{line:9,column:30},end:{line:9,column:42}},line:9},"2":{name:"(anonymous_2)",decl:{start:{line:9,column:48},end:{line:9,column:49}},loc:{start:{line:9,column:63},end:{line:9,column:92}},line:9},"3":{name:"(anonymous_3)",decl:{start:{line:10,column:29},end:{line:10,column:30}},loc:{start:{line:10,column:39},end:{line:10,column:44}},line:10},"4":{name:"(anonymous_4)",decl:{start:{line:22,column:38},end:{line:22,column:39}},loc:{start:{line:22,column:48},end:{line:22,column:53}},line:22}},branchMap:{"0":{loc:{start:{line:7,column:4},end:{line:27,column:5}},type:"if",locations:[{start:{line:7,column:4},end:{line:27,column:5}},{start:{line:7,column:4},end:{line:27,column:5}}],line:7},"1":{loc:{start:{line:9,column:69},end:{line:9,column:91}},type:"cond-expr",locations:[{start:{line:9,column:86},end:{line:9,column:87}},{start:{line:9,column:90},end:{line:9,column:91}}],line:9},"2":{loc:{start:{line:11,column:15},end:{line:11,column:44}},type:"cond-expr",locations:[{start:{line:11,column:25},end:{line:11,column:32}},{start:{line:11,column:35},end:{line:11,column:44}}],line:11},"3":{loc:{start:{line:13,column:9},end:{line:27,column:5}},type:"if",locations:[{start:{line:13,column:9},end:{line:27,column:5}},{start:{line:13,column:9},end:{line:27,column:5}}],line:13},"4":{loc:{start:{line:20,column:58},end:{line:20,column:76}},type:"cond-expr",locations:[{start:{line:20,column:71},end:{line:20,column:72}},{start:{line:20,column:75},end:{line:20,column:76}}],line:20}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},inputSourceMap:{version:3,file:"/home/codex-coder/Documents/projects/ceasar-cypher/isbn13.ts",sources:["/home/codex-coder/Documents/projects/ceasar-cypher/isbn13.ts"],names:[],mappings:";;;AAAO,MAAM,MAAM,GAAG,CAAC,GAA8B,EAAE,EAAE;IACrD,IAAI,OAAO,GAAG,KAAK,CAAA;IACnB,IAAI,OAAO,GAAG,KAAK,CAAC;IACpB,IAAI,GAAG,CAAC,MAAM,KAAK,EAAE,EAAE;QACnB,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QACpB,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,EAAO,EAAE,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAO,EAAE,KAAU,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrG,OAAO,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAM,EAAE,CAAM,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QAC9D,OAAO,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC;KAExC;SAAM,IAAI,GAAG,CAAC,MAAM,KAAK,EAAE,EAAE;QAC1B,IAAI,YAAY,GAAG,EAAE,CAAA;QACrB,IAAI,UAAU,GAAG,KAAK,CAAA;QACtB,GAAG,GAAG,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC9B,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QAEpB,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YAC7C,UAAU,GAAG,CAAC,UAAU,CAAC;YACzB,YAAY,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACrE;QAED,IAAI,GAAG,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC/C,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAEjB,IAAI,UAAU,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;QACxC,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAErC,OAAO,GAAG,GAAG,UAAU,CAAC,QAAQ,EAAE,CAAC;KACtC;IAED,0BAA0B;IAC1B,6CAA6C;IAC7C,gCAAgC;IAEhC,uBAAuB;IACvB,iEAAiE;IACjE,iHAAiH;IACjH,4CAA4C;IAC5C,wBAAwB;IACxB,OAAO;IAEP,kCAAkC;IAClC,mDAAmD;IACnD,yBAAyB;IACzB,wDAAwD;IAExD,IAAI;IACJ,sCAAsC;IACtC,mCAAmC;IACnC,mFAAmF;IAEnF,6CAA6C;IAC7C,SAAS;IACT,uHAAuH;IAIvH,0DAA0D;IAC1D,mHAAmH;IAEnH,oIAAoI;IACpI,iEAAiE;IAMjE,+BAA+B;IAC/B,oEAAoE;IAEpE,2CAA2C;IAC3C,IAAI;AAER,CAAC,CAAC;AAxEW,QAAA,MAAM,UAwEjB;AAGF,OAAO,CAAC,GAAG,CAAC,IAAA,cAAM,EAAC,YAAY,CAAC,CAAC,CAAA;AAEjC,uCAAuC",sourcesContent:["export const isbn13 = (str: string | Array<any> | any) => {\n    let i13Bool = false\n    let isValid = false;\n    if (str.length === 13) {\n        str = str.split(\"\");\n        str = str.map((el: any) => parseInt(el)).map((el: any, index: any) => el * (index % 2 == 0 ? 1 : 3));\n        isValid = str.reduce((a: any, b: any) => a + b, 0) % 10 === 0;\n        return isValid ? \"Valid\" : \"Invalid\";\n\n    } else if (str.length === 10) {\n        let strContainer = []\n        let weightBool = false\n        str = \"978\" + str.slice(0, 9);\n        str = str.split(\"\");\n\n        for (let index = 0; index < str.length; index++) {\n            weightBool = !weightBool;\n            strContainer[index] = parseInt(str[index]) * (weightBool ? 1 : 3);\n        }\n\n        let sum = strContainer.reduce((a, b) => a + b);\n        console.log(sum);\n        \n        let checkDigit = (10 - (sum % 10)) % 10;\n        str = str.join(\"\").replace(/,/g, \"\");\n\n        return str + checkDigit.toString();\n    }\n\n    // let wiegthCounter = 11;\n    // let i13Array = [1,3,1,3,1,3,1,3,1,3,1,3,1]\n    // console.log(i13Array.length);\n\n    // str = str.split(\"\");\n    // str[str.length - 1] === \"X\" ? str[str.length - 1] = 10 : null;\n    // isValid = str.map((el: any) => parseInt(el) * wiegthCounter--).reduce((a: any, b: any) => a + b, 0) % 11 === 0\n    // str = str.map((el: any) => parseInt(el));\n    // str.unshift(9, 7, 8);\n    // str;\n\n    // let weightNums:Array<any> = [];\n    // for (let index = 0;str.length > index; index++){\n    //     i13Bool = !i13Bool\n    //     weightNums[index] = str[index] * i13Array[index];\n\n    // }\n    // // str.map((el: any,index:any) => {\n    // //     // console.log(index +1);\n    //     console.log((11 -(weightNums.reduce((a: any, b: any) => a + b) % 10)) % 10);\n\n    // //    return el * (index % 2 === 0? 1 : 3)\n    // // });\n    // // console.log(str.map((el:any,index:any) => el * index % 2 === 0 ? 1 : 3).reduce((a: any, b: any) => a + b) % 10) ;\n\n\n\n    // let sum = weightNums.reduce((a: any, b: any) => a + b);\n    // isValid = str.map((el:any,index:any) => el * index % 2 === 0 ? 1 : 3).reduce((a: any, b: any) => a + b) % 10===0\n\n    // let checkDigit = (10 - (str.map((el:any,index:any) => el * index % 2 === 0 ? 1 : 3).reduce((a: any, b: any) => a + b) % 10)) % 10\n    // console.log(\"Sum -->> \" + sum+\"\\n\"+\"Check -->> \"+ checkDigit);\n\n\n\n\n\n    // str.join().replace(/,/g, \"\")\n    // // .reduce((a:any,b:any)=> a + b) % 11 === 0 ? \"Valid\":\"Invalid\";\n\n    // return isValid ? weightNums : \"Invalid\";\n    // }\n\n};\n\n\nconsole.log(isbn13(\"0316066524\"))\n\n// console.log(isbn13(\"9783866155237\"))\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"e0264ac926c583d4266fac1d03a4f9f9b5946845"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1az1wpajte=function(){return actualCoverage;};}return actualCoverage;}cov_1az1wpajte();cov_1az1wpajte().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_1az1wpajte().s[1]++;exports.isbn13=void 0;cov_1az1wpajte().s[2]++;const isbn13=str=>{cov_1az1wpajte().f[0]++;let i13Bool=(cov_1az1wpajte().s[3]++,false);let isValid=(cov_1az1wpajte().s[4]++,false);cov_1az1wpajte().s[5]++;if(str.length===13){cov_1az1wpajte().b[0][0]++;cov_1az1wpajte().s[6]++;str=str.split("");cov_1az1wpajte().s[7]++;str=str.map(el=>{cov_1az1wpajte().f[1]++;cov_1az1wpajte().s[8]++;return parseInt(el);}).map((el,index)=>{cov_1az1wpajte().f[2]++;cov_1az1wpajte().s[9]++;return el*(index%2==0?(cov_1az1wpajte().b[1][0]++,1):(cov_1az1wpajte().b[1][1]++,3));});cov_1az1wpajte().s[10]++;isValid=str.reduce((a,b)=>{cov_1az1wpajte().f[3]++;cov_1az1wpajte().s[11]++;return a+b;},0)%10===0;cov_1az1wpajte().s[12]++;return isValid?(cov_1az1wpajte().b[2][0]++,"Valid"):(cov_1az1wpajte().b[2][1]++,"Invalid");}else{cov_1az1wpajte().b[0][1]++;cov_1az1wpajte().s[13]++;if(str.length===10){cov_1az1wpajte().b[3][0]++;let strContainer=(cov_1az1wpajte().s[14]++,[]);let weightBool=(cov_1az1wpajte().s[15]++,false);cov_1az1wpajte().s[16]++;str="978"+str.slice(0,9);cov_1az1wpajte().s[17]++;str=str.split("");cov_1az1wpajte().s[18]++;for(let index=(cov_1az1wpajte().s[19]++,0);index<str.length;index++){cov_1az1wpajte().s[20]++;weightBool=!weightBool;cov_1az1wpajte().s[21]++;strContainer[index]=parseInt(str[index])*(weightBool?(cov_1az1wpajte().b[4][0]++,1):(cov_1az1wpajte().b[4][1]++,3));}let sum=(cov_1az1wpajte().s[22]++,strContainer.reduce((a,b)=>{cov_1az1wpajte().f[4]++;cov_1az1wpajte().s[23]++;return a+b;}));cov_1az1wpajte().s[24]++;console.log(sum);let checkDigit=(cov_1az1wpajte().s[25]++,(10-sum%10)%10);cov_1az1wpajte().s[26]++;str=str.join("").replace(/,/g,"");cov_1az1wpajte().s[27]++;return str+checkDigit.toString();}else{cov_1az1wpajte().b[3][1]++;}}// let wiegthCounter = 11;
// let i13Array = [1,3,1,3,1,3,1,3,1,3,1,3,1]
// console.log(i13Array.length);
// str = str.split("");
// str[str.length - 1] === "X" ? str[str.length - 1] = 10 : null;
// isValid = str.map((el: any) => parseInt(el) * wiegthCounter--).reduce((a: any, b: any) => a + b, 0) % 11 === 0
// str = str.map((el: any) => parseInt(el));
// str.unshift(9, 7, 8);
// str;
// let weightNums:Array<any> = [];
// for (let index = 0;str.length > index; index++){
//     i13Bool = !i13Bool
//     weightNums[index] = str[index] * i13Array[index];
// }
// // str.map((el: any,index:any) => {
// //     // console.log(index +1);
//     console.log((11 -(weightNums.reduce((a: any, b: any) => a + b) % 10)) % 10);
// //    return el * (index % 2 === 0? 1 : 3)
// // });
// // console.log(str.map((el:any,index:any) => el * index % 2 === 0 ? 1 : 3).reduce((a: any, b: any) => a + b) % 10) ;
// let sum = weightNums.reduce((a: any, b: any) => a + b);
// isValid = str.map((el:any,index:any) => el * index % 2 === 0 ? 1 : 3).reduce((a: any, b: any) => a + b) % 10===0
// let checkDigit = (10 - (str.map((el:any,index:any) => el * index % 2 === 0 ? 1 : 3).reduce((a: any, b: any) => a + b) % 10)) % 10
// console.log("Sum -->> " + sum+"\n"+"Check -->> "+ checkDigit);
// str.join().replace(/,/g, "")
// // .reduce((a:any,b:any)=> a + b) % 11 === 0 ? "Valid":"Invalid";
// return isValid ? weightNums : "Invalid";
// }
};cov_1az1wpajte().s[28]++;exports.isbn13=isbn13;cov_1az1wpajte().s[29]++;console.log((0,exports.isbn13)("0316066524"));// console.log(isbn13("9783866155237"))
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL2hvbWUvY29kZXgtY29kZXIvRG9jdW1lbnRzL3Byb2plY3RzL2NlYXNhci1jeXBoZXIvaXNibjEzLnRzIiwic291cmNlcyI6WyIvaG9tZS9jb2RleC1jb2Rlci9Eb2N1bWVudHMvcHJvamVjdHMvY2Vhc2FyLWN5cGhlci9pc2JuMTMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQU8sTUFBTSxNQUFNLEdBQUcsQ0FBQyxHQUE4QixFQUFFLEVBQUU7SUFDckQsSUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFBO0lBQ25CLElBQUksT0FBTyxHQUFHLEtBQUssQ0FBQztJQUNwQixJQUFJLEdBQUcsQ0FBQyxNQUFNLEtBQUssRUFBRSxFQUFFO1FBQ25CLEdBQUcsR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQ3BCLEdBQUcsR0FBRyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBTyxFQUFFLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFPLEVBQUUsS0FBVSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxLQUFLLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3JHLE9BQU8sR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBTSxFQUFFLENBQU0sRUFBRSxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUMsR0FBRyxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQzlELE9BQU8sT0FBTyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQztLQUV4QztTQUFNLElBQUksR0FBRyxDQUFDLE1BQU0sS0FBSyxFQUFFLEVBQUU7UUFDMUIsSUFBSSxZQUFZLEdBQUcsRUFBRSxDQUFBO1FBQ3JCLElBQUksVUFBVSxHQUFHLEtBQUssQ0FBQTtRQUN0QixHQUFHLEdBQUcsS0FBSyxHQUFHLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQzlCLEdBQUcsR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBRXBCLEtBQUssSUFBSSxLQUFLLEdBQUcsQ0FBQyxFQUFFLEtBQUssR0FBRyxHQUFHLENBQUMsTUFBTSxFQUFFLEtBQUssRUFBRSxFQUFFO1lBQzdDLFVBQVUsR0FBRyxDQUFDLFVBQVUsQ0FBQztZQUN6QixZQUFZLENBQUMsS0FBSyxDQUFDLEdBQUcsUUFBUSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQ3JFO1FBRUQsSUFBSSxHQUFHLEdBQUcsWUFBWSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztRQUMvQyxPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBRWpCLElBQUksVUFBVSxHQUFHLENBQUMsRUFBRSxHQUFHLENBQUMsR0FBRyxHQUFHLEVBQUUsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDO1FBQ3hDLEdBQUcsR0FBRyxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFFckMsT0FBTyxHQUFHLEdBQUcsVUFBVSxDQUFDLFFBQVEsRUFBRSxDQUFDO0tBQ3RDO0lBRUQsMEJBQTBCO0lBQzFCLDZDQUE2QztJQUM3QyxnQ0FBZ0M7SUFFaEMsdUJBQXVCO0lBQ3ZCLGlFQUFpRTtJQUNqRSxpSEFBaUg7SUFDakgsNENBQTRDO0lBQzVDLHdCQUF3QjtJQUN4QixPQUFPO0lBRVAsa0NBQWtDO0lBQ2xDLG1EQUFtRDtJQUNuRCx5QkFBeUI7SUFDekIsd0RBQXdEO0lBRXhELElBQUk7SUFDSixzQ0FBc0M7SUFDdEMsbUNBQW1DO0lBQ25DLG1GQUFtRjtJQUVuRiw2Q0FBNkM7SUFDN0MsU0FBUztJQUNULHVIQUF1SDtJQUl2SCwwREFBMEQ7SUFDMUQsbUhBQW1IO0lBRW5ILG9JQUFvSTtJQUNwSSxpRUFBaUU7SUFNakUsK0JBQStCO0lBQy9CLG9FQUFvRTtJQUVwRSwyQ0FBMkM7SUFDM0MsSUFBSTtBQUVSLENBQUMsQ0FBQztBQXhFVyxRQUFBLE1BQU0sVUF3RWpCO0FBR0YsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFBLGNBQU0sRUFBQyxZQUFZLENBQUMsQ0FBQyxDQUFBO0FBRWpDLHVDQUF1QyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBpc2JuMTMgPSAoc3RyOiBzdHJpbmcgfCBBcnJheTxhbnk+IHwgYW55KSA9PiB7XG4gICAgbGV0IGkxM0Jvb2wgPSBmYWxzZVxuICAgIGxldCBpc1ZhbGlkID0gZmFsc2U7XG4gICAgaWYgKHN0ci5sZW5ndGggPT09IDEzKSB7XG4gICAgICAgIHN0ciA9IHN0ci5zcGxpdChcIlwiKTtcbiAgICAgICAgc3RyID0gc3RyLm1hcCgoZWw6IGFueSkgPT4gcGFyc2VJbnQoZWwpKS5tYXAoKGVsOiBhbnksIGluZGV4OiBhbnkpID0+IGVsICogKGluZGV4ICUgMiA9PSAwID8gMSA6IDMpKTtcbiAgICAgICAgaXNWYWxpZCA9IHN0ci5yZWR1Y2UoKGE6IGFueSwgYjogYW55KSA9PiBhICsgYiwgMCkgJSAxMCA9PT0gMDtcbiAgICAgICAgcmV0dXJuIGlzVmFsaWQgPyBcIlZhbGlkXCIgOiBcIkludmFsaWRcIjtcblxuICAgIH0gZWxzZSBpZiAoc3RyLmxlbmd0aCA9PT0gMTApIHtcbiAgICAgICAgbGV0IHN0ckNvbnRhaW5lciA9IFtdXG4gICAgICAgIGxldCB3ZWlnaHRCb29sID0gZmFsc2VcbiAgICAgICAgc3RyID0gXCI5NzhcIiArIHN0ci5zbGljZSgwLCA5KTtcbiAgICAgICAgc3RyID0gc3RyLnNwbGl0KFwiXCIpO1xuXG4gICAgICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCBzdHIubGVuZ3RoOyBpbmRleCsrKSB7XG4gICAgICAgICAgICB3ZWlnaHRCb29sID0gIXdlaWdodEJvb2w7XG4gICAgICAgICAgICBzdHJDb250YWluZXJbaW5kZXhdID0gcGFyc2VJbnQoc3RyW2luZGV4XSkgKiAod2VpZ2h0Qm9vbCA/IDEgOiAzKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGxldCBzdW0gPSBzdHJDb250YWluZXIucmVkdWNlKChhLCBiKSA9PiBhICsgYik7XG4gICAgICAgIGNvbnNvbGUubG9nKHN1bSk7XG4gICAgICAgIFxuICAgICAgICBsZXQgY2hlY2tEaWdpdCA9ICgxMCAtIChzdW0gJSAxMCkpICUgMTA7XG4gICAgICAgIHN0ciA9IHN0ci5qb2luKFwiXCIpLnJlcGxhY2UoLywvZywgXCJcIik7XG5cbiAgICAgICAgcmV0dXJuIHN0ciArIGNoZWNrRGlnaXQudG9TdHJpbmcoKTtcbiAgICB9XG5cbiAgICAvLyBsZXQgd2llZ3RoQ291bnRlciA9IDExO1xuICAgIC8vIGxldCBpMTNBcnJheSA9IFsxLDMsMSwzLDEsMywxLDMsMSwzLDEsMywxXVxuICAgIC8vIGNvbnNvbGUubG9nKGkxM0FycmF5Lmxlbmd0aCk7XG5cbiAgICAvLyBzdHIgPSBzdHIuc3BsaXQoXCJcIik7XG4gICAgLy8gc3RyW3N0ci5sZW5ndGggLSAxXSA9PT0gXCJYXCIgPyBzdHJbc3RyLmxlbmd0aCAtIDFdID0gMTAgOiBudWxsO1xuICAgIC8vIGlzVmFsaWQgPSBzdHIubWFwKChlbDogYW55KSA9PiBwYXJzZUludChlbCkgKiB3aWVndGhDb3VudGVyLS0pLnJlZHVjZSgoYTogYW55LCBiOiBhbnkpID0+IGEgKyBiLCAwKSAlIDExID09PSAwXG4gICAgLy8gc3RyID0gc3RyLm1hcCgoZWw6IGFueSkgPT4gcGFyc2VJbnQoZWwpKTtcbiAgICAvLyBzdHIudW5zaGlmdCg5LCA3LCA4KTtcbiAgICAvLyBzdHI7XG5cbiAgICAvLyBsZXQgd2VpZ2h0TnVtczpBcnJheTxhbnk+ID0gW107XG4gICAgLy8gZm9yIChsZXQgaW5kZXggPSAwO3N0ci5sZW5ndGggPiBpbmRleDsgaW5kZXgrKyl7XG4gICAgLy8gICAgIGkxM0Jvb2wgPSAhaTEzQm9vbFxuICAgIC8vICAgICB3ZWlnaHROdW1zW2luZGV4XSA9IHN0cltpbmRleF0gKiBpMTNBcnJheVtpbmRleF07XG5cbiAgICAvLyB9XG4gICAgLy8gLy8gc3RyLm1hcCgoZWw6IGFueSxpbmRleDphbnkpID0+IHtcbiAgICAvLyAvLyAgICAgLy8gY29uc29sZS5sb2coaW5kZXggKzEpO1xuICAgIC8vICAgICBjb25zb2xlLmxvZygoMTEgLSh3ZWlnaHROdW1zLnJlZHVjZSgoYTogYW55LCBiOiBhbnkpID0+IGEgKyBiKSAlIDEwKSkgJSAxMCk7XG5cbiAgICAvLyAvLyAgICByZXR1cm4gZWwgKiAoaW5kZXggJSAyID09PSAwPyAxIDogMylcbiAgICAvLyAvLyB9KTtcbiAgICAvLyAvLyBjb25zb2xlLmxvZyhzdHIubWFwKChlbDphbnksaW5kZXg6YW55KSA9PiBlbCAqIGluZGV4ICUgMiA9PT0gMCA/IDEgOiAzKS5yZWR1Y2UoKGE6IGFueSwgYjogYW55KSA9PiBhICsgYikgJSAxMCkgO1xuXG5cblxuICAgIC8vIGxldCBzdW0gPSB3ZWlnaHROdW1zLnJlZHVjZSgoYTogYW55LCBiOiBhbnkpID0+IGEgKyBiKTtcbiAgICAvLyBpc1ZhbGlkID0gc3RyLm1hcCgoZWw6YW55LGluZGV4OmFueSkgPT4gZWwgKiBpbmRleCAlIDIgPT09IDAgPyAxIDogMykucmVkdWNlKChhOiBhbnksIGI6IGFueSkgPT4gYSArIGIpICUgMTA9PT0wXG5cbiAgICAvLyBsZXQgY2hlY2tEaWdpdCA9ICgxMCAtIChzdHIubWFwKChlbDphbnksaW5kZXg6YW55KSA9PiBlbCAqIGluZGV4ICUgMiA9PT0gMCA/IDEgOiAzKS5yZWR1Y2UoKGE6IGFueSwgYjogYW55KSA9PiBhICsgYikgJSAxMCkpICUgMTBcbiAgICAvLyBjb25zb2xlLmxvZyhcIlN1bSAtLT4+IFwiICsgc3VtK1wiXFxuXCIrXCJDaGVjayAtLT4+IFwiKyBjaGVja0RpZ2l0KTtcblxuXG5cblxuXG4gICAgLy8gc3RyLmpvaW4oKS5yZXBsYWNlKC8sL2csIFwiXCIpXG4gICAgLy8gLy8gLnJlZHVjZSgoYTphbnksYjphbnkpPT4gYSArIGIpICUgMTEgPT09IDAgPyBcIlZhbGlkXCI6XCJJbnZhbGlkXCI7XG5cbiAgICAvLyByZXR1cm4gaXNWYWxpZCA/IHdlaWdodE51bXMgOiBcIkludmFsaWRcIjtcbiAgICAvLyB9XG5cbn07XG5cblxuY29uc29sZS5sb2coaXNibjEzKFwiMDMxNjA2NjUyNFwiKSlcblxuLy8gY29uc29sZS5sb2coaXNibjEzKFwiOTc4Mzg2NjE1NTIzN1wiKSlcbiJdfQ==
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMWF6MXdwYWp0ZSIsImFjdHVhbENvdmVyYWdlIiwicyIsImlzYm4xMyIsInN0ciIsImYiLCJpMTNCb29sIiwiaXNWYWxpZCIsImxlbmd0aCIsImIiLCJzcGxpdCIsIm1hcCIsImVsIiwicGFyc2VJbnQiLCJpbmRleCIsInJlZHVjZSIsImEiLCJzdHJDb250YWluZXIiLCJ3ZWlnaHRCb29sIiwic2xpY2UiLCJzdW0iLCJjb25zb2xlIiwibG9nIiwiY2hlY2tEaWdpdCIsImpvaW4iLCJyZXBsYWNlIiwidG9TdHJpbmciLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiL2hvbWUvY29kZXgtY29kZXIvRG9jdW1lbnRzL3Byb2plY3RzL2NlYXNhci1jeXBoZXIvaXNibjEzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBpc2JuMTMgPSAoc3RyOiBzdHJpbmcgfCBBcnJheTxhbnk+IHwgYW55KSA9PiB7XG4gICAgbGV0IGkxM0Jvb2wgPSBmYWxzZVxuICAgIGxldCBpc1ZhbGlkID0gZmFsc2U7XG4gICAgaWYgKHN0ci5sZW5ndGggPT09IDEzKSB7XG4gICAgICAgIHN0ciA9IHN0ci5zcGxpdChcIlwiKTtcbiAgICAgICAgc3RyID0gc3RyLm1hcCgoZWw6IGFueSkgPT4gcGFyc2VJbnQoZWwpKS5tYXAoKGVsOiBhbnksIGluZGV4OiBhbnkpID0+IGVsICogKGluZGV4ICUgMiA9PSAwID8gMSA6IDMpKTtcbiAgICAgICAgaXNWYWxpZCA9IHN0ci5yZWR1Y2UoKGE6IGFueSwgYjogYW55KSA9PiBhICsgYiwgMCkgJSAxMCA9PT0gMDtcbiAgICAgICAgcmV0dXJuIGlzVmFsaWQgPyBcIlZhbGlkXCIgOiBcIkludmFsaWRcIjtcblxuICAgIH0gZWxzZSBpZiAoc3RyLmxlbmd0aCA9PT0gMTApIHtcbiAgICAgICAgbGV0IHN0ckNvbnRhaW5lciA9IFtdXG4gICAgICAgIGxldCB3ZWlnaHRCb29sID0gZmFsc2VcbiAgICAgICAgc3RyID0gXCI5NzhcIiArIHN0ci5zbGljZSgwLCA5KTtcbiAgICAgICAgc3RyID0gc3RyLnNwbGl0KFwiXCIpO1xuXG4gICAgICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCBzdHIubGVuZ3RoOyBpbmRleCsrKSB7XG4gICAgICAgICAgICB3ZWlnaHRCb29sID0gIXdlaWdodEJvb2w7XG4gICAgICAgICAgICBzdHJDb250YWluZXJbaW5kZXhdID0gcGFyc2VJbnQoc3RyW2luZGV4XSkgKiAod2VpZ2h0Qm9vbCA/IDEgOiAzKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGxldCBzdW0gPSBzdHJDb250YWluZXIucmVkdWNlKChhLCBiKSA9PiBhICsgYik7XG4gICAgICAgIGNvbnNvbGUubG9nKHN1bSk7XG4gICAgICAgIFxuICAgICAgICBsZXQgY2hlY2tEaWdpdCA9ICgxMCAtIChzdW0gJSAxMCkpICUgMTA7XG4gICAgICAgIHN0ciA9IHN0ci5qb2luKFwiXCIpLnJlcGxhY2UoLywvZywgXCJcIik7XG5cbiAgICAgICAgcmV0dXJuIHN0ciArIGNoZWNrRGlnaXQudG9TdHJpbmcoKTtcbiAgICB9XG5cbiAgICAvLyBsZXQgd2llZ3RoQ291bnRlciA9IDExO1xuICAgIC8vIGxldCBpMTNBcnJheSA9IFsxLDMsMSwzLDEsMywxLDMsMSwzLDEsMywxXVxuICAgIC8vIGNvbnNvbGUubG9nKGkxM0FycmF5Lmxlbmd0aCk7XG5cbiAgICAvLyBzdHIgPSBzdHIuc3BsaXQoXCJcIik7XG4gICAgLy8gc3RyW3N0ci5sZW5ndGggLSAxXSA9PT0gXCJYXCIgPyBzdHJbc3RyLmxlbmd0aCAtIDFdID0gMTAgOiBudWxsO1xuICAgIC8vIGlzVmFsaWQgPSBzdHIubWFwKChlbDogYW55KSA9PiBwYXJzZUludChlbCkgKiB3aWVndGhDb3VudGVyLS0pLnJlZHVjZSgoYTogYW55LCBiOiBhbnkpID0+IGEgKyBiLCAwKSAlIDExID09PSAwXG4gICAgLy8gc3RyID0gc3RyLm1hcCgoZWw6IGFueSkgPT4gcGFyc2VJbnQoZWwpKTtcbiAgICAvLyBzdHIudW5zaGlmdCg5LCA3LCA4KTtcbiAgICAvLyBzdHI7XG5cbiAgICAvLyBsZXQgd2VpZ2h0TnVtczpBcnJheTxhbnk+ID0gW107XG4gICAgLy8gZm9yIChsZXQgaW5kZXggPSAwO3N0ci5sZW5ndGggPiBpbmRleDsgaW5kZXgrKyl7XG4gICAgLy8gICAgIGkxM0Jvb2wgPSAhaTEzQm9vbFxuICAgIC8vICAgICB3ZWlnaHROdW1zW2luZGV4XSA9IHN0cltpbmRleF0gKiBpMTNBcnJheVtpbmRleF07XG5cbiAgICAvLyB9XG4gICAgLy8gLy8gc3RyLm1hcCgoZWw6IGFueSxpbmRleDphbnkpID0+IHtcbiAgICAvLyAvLyAgICAgLy8gY29uc29sZS5sb2coaW5kZXggKzEpO1xuICAgIC8vICAgICBjb25zb2xlLmxvZygoMTEgLSh3ZWlnaHROdW1zLnJlZHVjZSgoYTogYW55LCBiOiBhbnkpID0+IGEgKyBiKSAlIDEwKSkgJSAxMCk7XG5cbiAgICAvLyAvLyAgICByZXR1cm4gZWwgKiAoaW5kZXggJSAyID09PSAwPyAxIDogMylcbiAgICAvLyAvLyB9KTtcbiAgICAvLyAvLyBjb25zb2xlLmxvZyhzdHIubWFwKChlbDphbnksaW5kZXg6YW55KSA9PiBlbCAqIGluZGV4ICUgMiA9PT0gMCA/IDEgOiAzKS5yZWR1Y2UoKGE6IGFueSwgYjogYW55KSA9PiBhICsgYikgJSAxMCkgO1xuXG5cblxuICAgIC8vIGxldCBzdW0gPSB3ZWlnaHROdW1zLnJlZHVjZSgoYTogYW55LCBiOiBhbnkpID0+IGEgKyBiKTtcbiAgICAvLyBpc1ZhbGlkID0gc3RyLm1hcCgoZWw6YW55LGluZGV4OmFueSkgPT4gZWwgKiBpbmRleCAlIDIgPT09IDAgPyAxIDogMykucmVkdWNlKChhOiBhbnksIGI6IGFueSkgPT4gYSArIGIpICUgMTA9PT0wXG5cbiAgICAvLyBsZXQgY2hlY2tEaWdpdCA9ICgxMCAtIChzdHIubWFwKChlbDphbnksaW5kZXg6YW55KSA9PiBlbCAqIGluZGV4ICUgMiA9PT0gMCA/IDEgOiAzKS5yZWR1Y2UoKGE6IGFueSwgYjogYW55KSA9PiBhICsgYikgJSAxMCkpICUgMTBcbiAgICAvLyBjb25zb2xlLmxvZyhcIlN1bSAtLT4+IFwiICsgc3VtK1wiXFxuXCIrXCJDaGVjayAtLT4+IFwiKyBjaGVja0RpZ2l0KTtcblxuXG5cblxuXG4gICAgLy8gc3RyLmpvaW4oKS5yZXBsYWNlKC8sL2csIFwiXCIpXG4gICAgLy8gLy8gLnJlZHVjZSgoYTphbnksYjphbnkpPT4gYSArIGIpICUgMTEgPT09IDAgPyBcIlZhbGlkXCI6XCJJbnZhbGlkXCI7XG5cbiAgICAvLyByZXR1cm4gaXNWYWxpZCA/IHdlaWdodE51bXMgOiBcIkludmFsaWRcIjtcbiAgICAvLyB9XG5cbn07XG5cblxuY29uc29sZS5sb2coaXNibjEzKFwiMDMxNjA2NjUyNFwiKSlcblxuLy8gY29uc29sZS5sb2coaXNibjEzKFwiOTc4Mzg2NjE1NTIzN1wiKSlcbiJdLCJtYXBwaW5ncyI6Im82UkFZVztBQUFBQSxjQUFBLFNBQUFBLENBQUEsU0FBQUMsY0FBQSxXQUFBQSxjQUFBLEVBQUFELGNBQUEsR0FBQUEsY0FBQSxHQUFBRSxDQUFBLE0sK0hBWkosS0FBTSxDQUFBQyxNQUFNLENBQUlDLEdBQThCLEVBQUksQ0FBQUosY0FBQSxHQUFBSyxDQUFBLE1BQ3JELEdBQUksQ0FBQUMsT0FBTyxFQUFBTixjQUFBLEdBQUFFLENBQUEsTUFBRyxLQUFLLEVBQ25CLEdBQUksQ0FBQUssT0FBTyxFQUFBUCxjQUFBLEdBQUFFLENBQUEsTUFBRyxLQUFLLEVBQUNGLGNBQUEsR0FBQUUsQ0FBQSxNQUNwQixHQUFJRSxHQUFHLENBQUNJLE1BQU0sR0FBSyxFQUFFLENBQUUsQ0FBQVIsY0FBQSxHQUFBUyxDQUFBLFNBQUFULGNBQUEsR0FBQUUsQ0FBQSxNQUNuQkUsR0FBRyxDQUFHQSxHQUFHLENBQUNNLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQ1YsY0FBQSxHQUFBRSxDQUFBLE1BQ3BCRSxHQUFHLENBQUdBLEdBQUcsQ0FBQ08sR0FBRyxDQUFFQyxFQUFPLEVBQUssQ0FB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
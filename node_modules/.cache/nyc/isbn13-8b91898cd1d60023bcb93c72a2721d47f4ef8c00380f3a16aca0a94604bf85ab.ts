"use strict";// export let isbn13 = (str: string | Array<any> | any) => {
function cov_1az1wpajte(){var path="/home/codex-coder/Documents/projects/ceasar-cypher/isbn13.ts";var hash="531d368570a0327c858031ba9bd0df70ec406518";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/codex-coder/Documents/projects/ceasar-cypher/isbn13.ts",statementMap:{"0":{start:{line:3,column:0},end:{line:3,column:62}},"1":{start:{line:4,column:0},end:{line:4,column:24}},"2":{start:{line:34,column:15},end:{line:61,column:1}},"3":{start:{line:35,column:18},end:{line:35,column:23}},"4":{start:{line:36,column:23},end:{line:36,column:25}},"5":{start:{line:37,column:21},end:{line:37,column:26}},"6":{start:{line:38,column:4},end:{line:60,column:5}},"7":{start:{line:39,column:8},end:{line:39,column:25}},"8":{start:{line:40,column:8},end:{line:40,column:38}},"9":{start:{line:41,column:8},end:{line:41,column:28}},"10":{start:{line:42,column:8},end:{line:45,column:9}},"11":{start:{line:42,column:25},end:{line:42,column:26}},"12":{start:{line:43,column:12},end:{line:43,column:37}},"13":{start:{line:44,column:12},end:{line:44,column:78}},"14":{start:{line:46,column:18},end:{line:46,column:54}},"15":{start:{line:46,column:48},end:{line:46,column:53}},"16":{start:{line:47,column:25},end:{line:47,column:47}},"17":{start:{line:48,column:8},end:{line:48,column:45}},"18":{start:{line:49,column:8},end:{line:49,column:72}},"19":{start:{line:52,column:8},end:{line:52,column:28}},"20":{start:{line:53,column:8},end:{line:56,column:9}},"21":{start:{line:53,column:25},end:{line:53,column:26}},"22":{start:{line:54,column:12},end:{line:54,column:37}},"23":{start:{line:55,column:12},end:{line:55,column:78}},"24":{start:{line:57,column:18},end:{line:57,column:54}},"25":{start:{line:57,column:48},end:{line:57,column:53}},"26":{start:{line:58,column:8},end:{line:58,column:33}},"27":{start:{line:59,column:8},end:{line:59,column:45}},"28":{start:{line:62,column:0},end:{line:62,column:24}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:34,column:15},end:{line:34,column:16}},loc:{start:{line:34,column:24},end:{line:61,column:1}},line:34},"1":{name:"(anonymous_1)",decl:{start:{line:46,column:38},end:{line:46,column:39}},loc:{start:{line:46,column:48},end:{line:46,column:53}},line:46},"2":{name:"(anonymous_2)",decl:{start:{line:57,column:38},end:{line:57,column:39}},loc:{start:{line:57,column:48},end:{line:57,column:53}},line:57}},branchMap:{"0":{loc:{start:{line:38,column:4},end:{line:60,column:5}},type:"if",locations:[{start:{line:38,column:4},end:{line:60,column:5}},{start:{line:38,column:4},end:{line:60,column:5}}],line:38},"1":{loc:{start:{line:44,column:58},end:{line:44,column:76}},type:"cond-expr",locations:[{start:{line:44,column:71},end:{line:44,column:72}},{start:{line:44,column:75},end:{line:44,column:76}}],line:44},"2":{loc:{start:{line:49,column:15},end:{line:49,column:71}},type:"cond-expr",locations:[{start:{line:49,column:32},end:{line:49,column:59}},{start:{line:49,column:62},end:{line:49,column:71}}],line:49},"3":{loc:{start:{line:55,column:58},end:{line:55,column:76}},type:"cond-expr",locations:[{start:{line:55,column:71},end:{line:55,column:72}},{start:{line:55,column:75},end:{line:55,column:76}}],line:55},"4":{loc:{start:{line:59,column:15},end:{line:59,column:44}},type:"cond-expr",locations:[{start:{line:59,column:25},end:{line:59,column:32}},{start:{line:59,column:35},end:{line:59,column:44}}],line:59}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0},f:{"0":0,"1":0,"2":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},inputSourceMap:{version:3,file:"/home/codex-coder/Documents/projects/ceasar-cypher/isbn13.ts",sources:["/home/codex-coder/Documents/projects/ceasar-cypher/isbn13.ts"],names:[],mappings:";AAAA,4DAA4D;;;AAG5D,2BAA2B;AAC3B,4BAA4B;AAE5B,sCAAsC;AAGtC,+BAA+B;AAC/B,yCAAyC;AACzC,+BAA+B;AAE/B,6DAA6D;AAC7D,uCAAuC;AACvC,gFAAgF;AAEhF,YAAY;AAEZ,wDAAwD;AACxD,iDAAiD;AACjD,6CAA6C;AAC7C,wEAAwE;AACxE,eAAe;AACf,+BAA+B;AAC/B,+BAA+B;AAG/B,6DAA6D;AAC7D,uCAAuC;AACvC,gFAAgF;AAEhF,YAAY;AACZ,uEAAuE;AACvE,wDAAwD;AACxD,iDAAiD;AACjD,2DAA2D;AAC3D,8FAA8F;AAE9F,8CAA8C;AAC9C,QAAQ;AAKR,IAAI;AAIG,MAAM,MAAM,GAAG,CAAC,GAA8B,EAAE,EAAE;IACvD,IAAI,OAAO,GAAG,KAAK,CAAC;IACpB,IAAI,YAAY,GAAG,EAAE,CAAC;IAEtB,IAAI,UAAU,GAAG,KAAK,CAAC;IAEvB,IAAI,GAAG,CAAC,MAAM,KAAK,EAAE,EAAE;QACrB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAEjB,GAAG,GAAG,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC9B,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QAEpB,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YAC/C,UAAU,GAAG,CAAC,UAAU,CAAC;YACzB,YAAY,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACnE;QAED,IAAI,GAAG,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC/C,IAAI,UAAU,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;QACxC,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAErC,OAAO,GAAG,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;KACjE;SAAM;QACL,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QAEpB,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YAC/C,UAAU,GAAG,CAAC,UAAU,CAAC;YACzB,YAAY,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACnE;QAED,IAAI,GAAG,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC/C,OAAO,GAAG,GAAG,GAAG,EAAE,KAAK,CAAC,CAAC;QAEzB,OAAO,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC;KACtC;AACH,CAAC,CAAC;AAnCW,QAAA,MAAM,UAmCjB",sourcesContent:["// export let isbn13 = (str: string | Array<any> | any) => {\n    \n    \n//     let isValid = false;\n//     let strContainer = []\n\n//     let weightBool: boolean = false\n\n\n//     if (str.length === 10) {\n//         str = \"978\" + str.slice(0, 9);\n//         str = str.split(\"\");\n\n//         for (let index = 0; str.length > index; index++) {\n//             weightBool = !weightBool\n//             strContainer[index] = parseInt(str[index]) * (weightBool ? 1 : 3)\n\n//         }\n\n//         let c = strContainer.reduce((a, b) => a + b);\n//         let check_digit = (10 - (c % 10)) % 10\n//         str = str.join().replace(/,/g, \"\")\n//         return c % 10 !== 0? str + check_digit.toString(): \"Invalid\";\n//     } else {\n//         str = str.split(\"\");\n//         // console.log(str);\n\n\n//         for (let index = 0; str.length > index; index++) {\n//             weightBool = !weightBool\n//             strContainer[index] = parseInt(str[index]) * (weightBool ? 1 : 3)\n\n//         }\n//         console.log(strContainer.reduce((a, b) => a + b) % 10 === 0)\n//         let c = strContainer.reduce((a, b) => a + b);\n//         let check_digit = (10 - (c % 10)) % 10\n//          strContainer.reduce((a, b) => a + b) % 10 === 0\n//          strContainer.reduce((a, b) => a + b) % 10 === 0 ?  isValid =true : isValid =false;\n\n//          return isValid ? \"Valid\":\"Invalid\"\n//     }\n\n\n\n\n// }\n\n\n\nexport const isbn13 = (str: string | Array<any> | any) => {\n  let isValid = false;\n  let strContainer = [];\n\n  let weightBool = false;\n\n  if (str.length === 10) {\n    console.log(str);\n    \n    str = \"978\" + str.slice(0, 9);\n    str = str.split(\"\");\n\n    for (let index = 0; index < str.length; index++) {\n      weightBool = !weightBool;\n      strContainer[index] = parseInt(str[index]) * (weightBool ? 1 : 3);\n    }\n\n    let sum = strContainer.reduce((a, b) => a + b);\n    let checkDigit = (10 - (sum % 10)) % 10;\n    str = str.join(\"\").replace(/,/g, \"\");\n\n    return sum % 10 !== 0 ? str + checkDigit.toString() : \"Invalid\";\n  } else {\n    str = str.split(\"\");\n\n    for (let index = 0; index < str.length; index++) {\n      weightBool = !weightBool;\n      strContainer[index] = parseInt(str[index]) * (weightBool ? 1 : 3);\n    }\n\n    let sum = strContainer.reduce((a, b) => a + b);\n    isValid = sum % 10 === 0;\n\n    return isValid ? \"Valid\" : \"Invalid\";\n  }\n};\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"531d368570a0327c858031ba9bd0df70ec406518"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1az1wpajte=function(){return actualCoverage;};}return actualCoverage;}cov_1az1wpajte();cov_1az1wpajte().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_1az1wpajte().s[1]++;exports.isbn13=void 0;//     let isValid = false;
//     let strContainer = []
//     let weightBool: boolean = false
//     if (str.length === 10) {
//         str = "978" + str.slice(0, 9);
//         str = str.split("");
//         for (let index = 0; str.length > index; index++) {
//             weightBool = !weightBool
//             strContainer[index] = parseInt(str[index]) * (weightBool ? 1 : 3)
//         }
//         let c = strContainer.reduce((a, b) => a + b);
//         let check_digit = (10 - (c % 10)) % 10
//         str = str.join().replace(/,/g, "")
//         return c % 10 !== 0? str + check_digit.toString(): "Invalid";
//     } else {
//         str = str.split("");
//         // console.log(str);
//         for (let index = 0; str.length > index; index++) {
//             weightBool = !weightBool
//             strContainer[index] = parseInt(str[index]) * (weightBool ? 1 : 3)
//         }
//         console.log(strContainer.reduce((a, b) => a + b) % 10 === 0)
//         let c = strContainer.reduce((a, b) => a + b);
//         let check_digit = (10 - (c % 10)) % 10
//          strContainer.reduce((a, b) => a + b) % 10 === 0
//          strContainer.reduce((a, b) => a + b) % 10 === 0 ?  isValid =true : isValid =false;
//          return isValid ? "Valid":"Invalid"
//     }
// }
cov_1az1wpajte().s[2]++;const isbn13=str=>{cov_1az1wpajte().f[0]++;let isValid=(cov_1az1wpajte().s[3]++,false);let strContainer=(cov_1az1wpajte().s[4]++,[]);let weightBool=(cov_1az1wpajte().s[5]++,false);cov_1az1wpajte().s[6]++;if(str.length===10){cov_1az1wpajte().b[0][0]++;cov_1az1wpajte().s[7]++;console.log(str);cov_1az1wpajte().s[8]++;str="978"+str.slice(0,9);cov_1az1wpajte().s[9]++;str=str.split("");cov_1az1wpajte().s[10]++;for(let index=(cov_1az1wpajte().s[11]++,0);index<str.length;index++){cov_1az1wpajte().s[12]++;weightBool=!weightBool;cov_1az1wpajte().s[13]++;strContainer[index]=parseInt(str[index])*(weightBool?(cov_1az1wpajte().b[1][0]++,1):(cov_1az1wpajte().b[1][1]++,3));}let sum=(cov_1az1wpajte().s[14]++,strContainer.reduce((a,b)=>{cov_1az1wpajte().f[1]++;cov_1az1wpajte().s[15]++;return a+b;}));let checkDigit=(cov_1az1wpajte().s[16]++,(10-sum%10)%10);cov_1az1wpajte().s[17]++;str=str.join("").replace(/,/g,"");cov_1az1wpajte().s[18]++;return sum%10!==0?(cov_1az1wpajte().b[2][0]++,str+checkDigit.toString()):(cov_1az1wpajte().b[2][1]++,"Invalid");}else{cov_1az1wpajte().b[0][1]++;cov_1az1wpajte().s[19]++;str=str.split("");cov_1az1wpajte().s[20]++;for(let index=(cov_1az1wpajte().s[21]++,0);index<str.length;index++){cov_1az1wpajte().s[22]++;weightBool=!weightBool;cov_1az1wpajte().s[23]++;strContainer[index]=parseInt(str[index])*(weightBool?(cov_1az1wpajte().b[3][0]++,1):(cov_1az1wpajte().b[3][1]++,3));}let sum=(cov_1az1wpajte().s[24]++,strContainer.reduce((a,b)=>{cov_1az1wpajte().f[2]++;cov_1az1wpajte().s[25]++;return a+b;}));cov_1az1wpajte().s[26]++;isValid=sum%10===0;cov_1az1wpajte().s[27]++;return isValid?(cov_1az1wpajte().b[4][0]++,"Valid"):(cov_1az1wpajte().b[4][1]++,"Invalid");}};cov_1az1wpajte().s[28]++;exports.isbn13=isbn13;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL2hvbWUvY29kZXgtY29kZXIvRG9jdW1lbnRzL3Byb2plY3RzL2NlYXNhci1jeXBoZXIvaXNibjEzLnRzIiwic291cmNlcyI6WyIvaG9tZS9jb2RleC1jb2Rlci9Eb2N1bWVudHMvcHJvamVjdHMvY2Vhc2FyLWN5cGhlci9pc2JuMTMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLDREQUE0RDs7O0FBRzVELDJCQUEyQjtBQUMzQiw0QkFBNEI7QUFFNUIsc0NBQXNDO0FBR3RDLCtCQUErQjtBQUMvQix5Q0FBeUM7QUFDekMsK0JBQStCO0FBRS9CLDZEQUE2RDtBQUM3RCx1Q0FBdUM7QUFDdkMsZ0ZBQWdGO0FBRWhGLFlBQVk7QUFFWix3REFBd0Q7QUFDeEQsaURBQWlEO0FBQ2pELDZDQUE2QztBQUM3Qyx3RUFBd0U7QUFDeEUsZUFBZTtBQUNmLCtCQUErQjtBQUMvQiwrQkFBK0I7QUFHL0IsNkRBQTZEO0FBQzdELHVDQUF1QztBQUN2QyxnRkFBZ0Y7QUFFaEYsWUFBWTtBQUNaLHVFQUF1RTtBQUN2RSx3REFBd0Q7QUFDeEQsaURBQWlEO0FBQ2pELDJEQUEyRDtBQUMzRCw4RkFBOEY7QUFFOUYsOENBQThDO0FBQzlDLFFBQVE7QUFLUixJQUFJO0FBSUcsTUFBTSxNQUFNLEdBQUcsQ0FBQyxHQUE4QixFQUFFLEVBQUU7SUFDdkQsSUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDO0lBQ3BCLElBQUksWUFBWSxHQUFHLEVBQUUsQ0FBQztJQUV0QixJQUFJLFVBQVUsR0FBRyxLQUFLLENBQUM7SUFFdkIsSUFBSSxHQUFHLENBQUMsTUFBTSxLQUFLLEVBQUUsRUFBRTtRQUNyQixPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBRWpCLEdBQUcsR0FBRyxLQUFLLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDOUIsR0FBRyxHQUFHLEdBQUcsQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUM7UUFFcEIsS0FBSyxJQUFJLEtBQUssR0FBRyxDQUFDLEVBQUUsS0FBSyxHQUFHLEdBQUcsQ0FBQyxNQUFNLEVBQUUsS0FBSyxFQUFFLEVBQUU7WUFDL0MsVUFBVSxHQUFHLENBQUMsVUFBVSxDQUFDO1lBQ3pCLFlBQVksQ0FBQyxLQUFLLENBQUMsR0FBRyxRQUFRLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDbkU7UUFFRCxJQUFJLEdBQUcsR0FBRyxZQUFZLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQy9DLElBQUksVUFBVSxHQUFHLENBQUMsRUFBRSxHQUFHLENBQUMsR0FBRyxHQUFHLEVBQUUsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDO1FBQ3hDLEdBQUcsR0FBRyxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFFckMsT0FBTyxHQUFHLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLFVBQVUsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDO0tBQ2pFO1NBQU07UUFDTCxHQUFHLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUVwQixLQUFLLElBQUksS0FBSyxHQUFHLENBQUMsRUFBRSxLQUFLLEdBQUcsR0FBRyxDQUFDLE1BQU0sRUFBRSxLQUFLLEVBQUUsRUFBRTtZQUMvQyxVQUFVLEdBQUcsQ0FBQyxVQUFVLENBQUM7WUFDekIsWUFBWSxDQUFDLEtBQUssQ0FBQyxHQUFHLFFBQVEsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUNuRTtRQUVELElBQUksR0FBRyxHQUFHLFlBQVksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFDL0MsT0FBTyxHQUFHLEdBQUcsR0FBRyxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBRXpCLE9BQU8sT0FBTyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQztLQUN0QztBQUNILENBQUMsQ0FBQztBQW5DVyxRQUFBLE1BQU0sVUFtQ2pCIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZXhwb3J0IGxldCBpc2JuMTMgPSAoc3RyOiBzdHJpbmcgfCBBcnJheTxhbnk+IHwgYW55KSA9PiB7XG4gICAgXG4gICAgXG4vLyAgICAgbGV0IGlzVmFsaWQgPSBmYWxzZTtcbi8vICAgICBsZXQgc3RyQ29udGFpbmVyID0gW11cblxuLy8gICAgIGxldCB3ZWlnaHRCb29sOiBib29sZWFuID0gZmFsc2VcblxuXG4vLyAgICAgaWYgKHN0ci5sZW5ndGggPT09IDEwKSB7XG4vLyAgICAgICAgIHN0ciA9IFwiOTc4XCIgKyBzdHIuc2xpY2UoMCwgOSk7XG4vLyAgICAgICAgIHN0ciA9IHN0ci5zcGxpdChcIlwiKTtcblxuLy8gICAgICAgICBmb3IgKGxldCBpbmRleCA9IDA7IHN0ci5sZW5ndGggPiBpbmRleDsgaW5kZXgrKykge1xuLy8gICAgICAgICAgICAgd2VpZ2h0Qm9vbCA9ICF3ZWlnaHRCb29sXG4vLyAgICAgICAgICAgICBzdHJDb250YWluZXJbaW5kZXhdID0gcGFyc2VJbnQoc3RyW2luZGV4XSkgKiAod2VpZ2h0Qm9vbCA/IDEgOiAzKVxuXG4vLyAgICAgICAgIH1cblxuLy8gICAgICAgICBsZXQgYyA9IHN0ckNvbnRhaW5lci5yZWR1Y2UoKGEsIGIpID0+IGEgKyBiKTtcbi8vICAgICAgICAgbGV0IGNoZWNrX2RpZ2l0ID0gKDEwIC0gKGMgJSAxMCkpICUgMTBcbi8vICAgICAgICAgc3RyID0gc3RyLmpvaW4oKS5yZXBsYWNlKC8sL2csIFwiXCIpXG4vLyAgICAgICAgIHJldHVybiBjICUgMTAgIT09IDA/IHN0ciArIGNoZWNrX2RpZ2l0LnRvU3RyaW5nKCk6IFwiSW52YWxpZFwiO1xuLy8gICAgIH0gZWxzZSB7XG4vLyAgICAgICAgIHN0ciA9IHN0ci5zcGxpdChcIlwiKTtcbi8vICAgICAgICAgLy8gY29uc29sZS5sb2coc3RyKTtcblxuXG4vLyAgICAgICAgIGZvciAobGV0IGluZGV4ID0gMDsgc3RyLmxlbmd0aCA+IGluZGV4OyBpbmRleCsrKSB7XG4vLyAgICAgICAgICAgICB3ZWlnaHRCb29sID0gIXdlaWdodEJvb2xcbi8vICAgICAgICAgICAgIHN0ckNvbnRhaW5lcltpbmRleF0gPSBwYXJzZUludChzdHJbaW5kZXhdKSAqICh3ZWlnaHRCb29sID8gMSA6IDMpXG5cbi8vICAgICAgICAgfVxuLy8gICAgICAgICBjb25zb2xlLmxvZyhzdHJDb250YWluZXIucmVkdWNlKChhLCBiKSA9PiBhICsgYikgJSAxMCA9PT0gMClcbi8vICAgICAgICAgbGV0IGMgPSBzdHJDb250YWluZXIucmVkdWNlKChhLCBiKSA9PiBhICsgYik7XG4vLyAgICAgICAgIGxldCBjaGVja19kaWdpdCA9ICgxMCAtIChjICUgMTApKSAlIDEwXG4vLyAgICAgICAgICBzdHJDb250YWluZXIucmVkdWNlKChhLCBiKSA9PiBhICsgYikgJSAxMCA9PT0gMFxuLy8gICAgICAgICAgc3RyQ29udGFpbmVyLnJlZHVjZSgoYSwgYikgPT4gYSArIGIpICUgMTAgPT09IDAgPyAgaXNWYWxpZCA9dHJ1ZSA6IGlzVmFsaWQgPWZhbHNlO1xuXG4vLyAgICAgICAgICByZXR1cm4gaXNWYWxpZCA/IFwiVmFsaWRcIjpcIkludmFsaWRcIlxuLy8gICAgIH1cblxuXG5cblxuLy8gfVxuXG5cblxuZXhwb3J0IGNvbnN0IGlzYm4xMyA9IChzdHI6IHN0cmluZyB8IEFycmF5PGFueT4gfCBhbnkpID0+IHtcbiAgbGV0IGlzVmFsaWQgPSBmYWxzZTtcbiAgbGV0IHN0ckNvbnRhaW5lciA9IFtdO1xuXG4gIGxldCB3ZWlnaHRCb29sID0gZmFsc2U7XG5cbiAgaWYgKHN0ci5sZW5ndGggPT09IDEwKSB7XG4gICAgY29uc29sZS5sb2coc3RyKTtcbiAgICBcbiAgICBzdHIgPSBcIjk3OFwiICsgc3RyLnNsaWNlKDAsIDkpO1xuICAgIHN0ciA9IHN0ci5zcGxpdChcIlwiKTtcblxuICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCBzdHIubGVuZ3RoOyBpbmRleCsrKSB7XG4gICAgICB3ZWlnaHRCb29sID0gIXdlaWdodEJvb2w7XG4gICAgICBzdHJDb250YWluZXJbaW5kZXhdID0gcGFyc2VJbnQoc3RyW2luZGV4XSkgKiAod2VpZ2h0Qm9vbCA/IDEgOiAzKTtcbiAgICB9XG5cbiAgICBsZXQgc3VtID0gc3RyQ29udGFpbmVyLnJlZHVjZSgoYSwgYikgPT4gYSArIGIpO1xuICAgIGxldCBjaGVja0RpZ2l0ID0gKDEwIC0gKHN1bSAlIDEwKSkgJSAxMDtcbiAgICBzdHIgPSBzdHIuam9pbihcIlwiKS5yZXBsYWNlKC8sL2csIFwiXCIpO1xuXG4gICAgcmV0dXJuIHN1bSAlIDEwICE9PSAwID8gc3RyICsgY2hlY2tEaWdpdC50b1N0cmluZygpIDogXCJJbnZhbGlkXCI7XG4gIH0gZWxzZSB7XG4gICAgc3RyID0gc3RyLnNwbGl0KFwiXCIpO1xuXG4gICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IHN0ci5sZW5ndGg7IGluZGV4KyspIHtcbiAgICAgIHdlaWdodEJvb2wgPSAhd2VpZ2h0Qm9vbDtcbiAgICAgIHN0ckNvbnRhaW5lcltpbmRleF0gPSBwYXJzZUludChzdHJbaW5kZXhdKSAqICh3ZWlnaHRCb29sID8gMSA6IDMpO1xuICAgIH1cblxuICAgIGxldCBzdW0gPSBzdHJDb250YWluZXIucmVkdWNlKChhLCBiKSA9PiBhICsgYik7XG4gICAgaXNWYWxpZCA9IHN1bSAlIDEwID09PSAwO1xuXG4gICAgcmV0dXJuIGlzVmFsaWQgPyBcIlZhbGlkXCIgOiBcIkludmFsaWRcIjtcbiAgfVxufTtcbiJdfQ==
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
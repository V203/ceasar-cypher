{"version":3,"file":"/home/codex-coder/Documents/projects/ceasar-cypher/isbn13.ts","sources":["/home/codex-coder/Documents/projects/ceasar-cypher/isbn13.ts"],"names":[],"mappings":";;;AAAO,IAAI,MAAM,GAAG,CAAC,GAA6B,EAAE,EAAE;IAIlD,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IACrB,IAAI,aAAa,GAAG,CAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;IAC3C,IAAI,aAAa,GAAG,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;IAChD,IAAI,YAAY,GAAG,EAAE,CAAC;IAAC,IAAI,YAAY,GAAG,EAAE,CAAC;IAE7C,IAAI,MAAM,GAAG,IAAI,CAAC;IAClB,IAAI,GAAG,CAAC,MAAM,KAAK,EAAE,EAAC;QACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,MAAM,GAAG,CAAC,EAAC,CAAC,EAAE,EAAC;YAC/B,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC;YACnC,YAAY,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;SACzD;QACG,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,EAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,CAAA;KAE1D;IAED,OAAO,MAAM,CAAC,CAAC,CAAC,OAAO,CAAA,CAAC,CAAC,SAAS,CAAC;IACtC,2BAA2B;IAC3B,6BAA6B;IAE7B,wDAAwD;IACxD,sBAAsB;IAEtB,IAAI;IAGJ,2BAA2B;IAE3B,oCAAoC;IACpC,2BAA2B;IAE3B,qCAAqC;IACrC,6BAA6B;IAE7B,2DAA2D;IAC3D,uCAAuC;IACvC,+EAA+E;IAE/E,4BAA4B;IAE5B,QAAQ;IAIR,kDAAkD;IAClD,6CAA6C;IAG7C,uCAAuC;IACvC,2CAA2C;AAE3C,CAAC,CAAA;AAtDU,QAAA,MAAM,UAsDhB","sourcesContent":["export let isbn13 = (str: string | Array<any>| any) =>{\n\n\n    \n    str = str.split(\"\");\n   let isbn10Matcher = [10,9,8,7,6,5,4,3,2,1];\n   let isbn13Matcher = [1,3,1,3,1,3,1,3,1,3,1,3,1];\n   let isbn10result = []; let isbn13result = [];\n   \n   let isISBN = null;\n   if (str.length === 10){\n   for (let i = 0; str.length > i;i++){\n       str[i] === \"X\" ? str[i] = 10: null;\n       isbn10result[i] = parseInt(str[i]) * isbn10Matcher[i];\n   }\t\n       isISBN = isbn10result.reduce((a,b) => a + b) % 11 === 0\n       \n   }\n\n   return isISBN ? \"Valid\": \"Invalid\";\n// console.log(str.length);\n// let str10 = str.split(\"\");\n\n// if(str10.reduce((a:any) => parseInt(a) ) % 11 ===0 ){\n//      return \"Valid\"\n\n// }\n\n    \n//     let strContainer =[]\n    \n//     str = \"978\" + str.slice(0,9);\n//     str = str.split(\"\");\n\n//     let weightBool:boolean = false\n//     if(str.length === 12){\n    \n//         for (let index = 0;str.length > index; index++){\n//             weightBool = !weightBool\n//             strContainer[index] =  parseInt(str[index]) * (weightBool ? 1:3)\n            \n//         }                \n        \n//     }\n    \n    \n\n//     let c = strContainer.reduce((a,b)=> a + b);\n//     let check_digit = (10 - (c % 10)) % 10\n    \n    \n//    str = str.join().replace(/,/g,\"\")\n//     return str + check_digit.toString();\n\n}\n"]}
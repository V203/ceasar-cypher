"use strict";function cov_1az1wpajte(){var path="/home/codex-coder/Documents/projects/ceasar-cypher/isbn13.ts";var hash="b0b08207716f915131f1374abc12d883f241a115";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/codex-coder/Documents/projects/ceasar-cypher/isbn13.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:0},end:{line:3,column:24}},"2":{start:{line:4,column:15},end:{line:33,column:1}},"3":{start:{line:5,column:18},end:{line:5,column:23}},"4":{start:{line:6,column:4},end:{line:31,column:5}},"5":{start:{line:7,column:8},end:{line:7,column:28}},"6":{start:{line:8,column:8},end:{line:8,column:94}},"7":{start:{line:8,column:30},end:{line:8,column:42}},"8":{start:{line:8,column:63},end:{line:8,column:92}},"9":{start:{line:9,column:8},end:{line:9,column:60}},"10":{start:{line:9,column:39},end:{line:9,column:44}},"11":{start:{line:10,column:8},end:{line:10,column:45}},"12":{start:{line:12,column:9},end:{line:31,column:5}},"13":{start:{line:14,column:26},end:{line:14,column:28}},"14":{start:{line:15,column:8},end:{line:15,column:28}},"15":{start:{line:16,column:8},end:{line:16,column:70}},"16":{start:{line:17,column:8},end:{line:17,column:30}},"17":{start:{line:18,column:8},end:{line:30,column:9}},"18":{start:{line:18,column:28},end:{line:18,column:56}},"19":{start:{line:18,column:75},end:{line:18,column:80}},"20":{start:{line:19,column:12},end:{line:19,column:29}},"21":{start:{line:20,column:12},end:{line:20,column:47}},"22":{start:{line:22,column:33},end:{line:22,column:38}},"23":{start:{line:23,column:27},end:{line:23,column:57}},"24":{start:{line:25,column:31},end:{line:25,column:58}},"25":{start:{line:26,column:12},end:{line:26,column:39}},"26":{start:{line:29,column:12},end:{line:29,column:29}},"27":{start:{line:34,column:0},end:{line:34,column:24}},"28":{start:{line:35,column:28},end:{line:44,column:1}},"29":{start:{line:36,column:23},end:{line:36,column:49}},"30":{start:{line:38,column:27},end:{line:38,column:94}},"31":{start:{line:38,column:60},end:{line:38,column:93}},"32":{start:{line:40,column:16},end:{line:40,column:54}},"33":{start:{line:40,column:48},end:{line:40,column:53}},"34":{start:{line:42,column:23},end:{line:42,column:45}},"35":{start:{line:43,column:4},end:{line:43,column:33}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:4,column:15},end:{line:4,column:16}},loc:{start:{line:4,column:24},end:{line:33,column:1}},line:4},"1":{name:"(anonymous_1)",decl:{start:{line:8,column:22},end:{line:8,column:23}},loc:{start:{line:8,column:30},end:{line:8,column:42}},line:8},"2":{name:"(anonymous_2)",decl:{start:{line:8,column:48},end:{line:8,column:49}},loc:{start:{line:8,column:63},end:{line:8,column:92}},line:8},"3":{name:"(anonymous_3)",decl:{start:{line:9,column:29},end:{line:9,column:30}},loc:{start:{line:9,column:39},end:{line:9,column:44}},line:9},"4":{name:"(anonymous_4)",decl:{start:{line:18,column:20},end:{line:18,column:21}},loc:{start:{line:18,column:28},end:{line:18,column:56}},line:18},"5":{name:"(anonymous_5)",decl:{start:{line:18,column:65},end:{line:18,column:66}},loc:{start:{line:18,column:75},end:{line:18,column:80}},line:18},"6":{name:"(anonymous_6)",decl:{start:{line:35,column:28},end:{line:35,column:29}},loc:{start:{line:35,column:38},end:{line:44,column:1}},line:35},"7":{name:"(anonymous_7)",decl:{start:{line:38,column:42},end:{line:38,column:43}},loc:{start:{line:38,column:60},end:{line:38,column:93}},line:38},"8":{name:"(anonymous_8)",decl:{start:{line:40,column:38},end:{line:40,column:39}},loc:{start:{line:40,column:48},end:{line:40,column:53}},line:40}},branchMap:{"0":{loc:{start:{line:6,column:4},end:{line:31,column:5}},type:"if",locations:[{start:{line:6,column:4},end:{line:31,column:5}},{start:{line:6,column:4},end:{line:31,column:5}}],line:6},"1":{loc:{start:{line:8,column:69},end:{line:8,column:91}},type:"cond-expr",locations:[{start:{line:8,column:86},end:{line:8,column:87}},{start:{line:8,column:90},end:{line:8,column:91}}],line:8},"2":{loc:{start:{line:10,column:15},end:{line:10,column:44}},type:"cond-expr",locations:[{start:{line:10,column:25},end:{line:10,column:32}},{start:{line:10,column:35},end:{line:10,column:44}}],line:10},"3":{loc:{start:{line:12,column:9},end:{line:31,column:5}},type:"if",locations:[{start:{line:12,column:9},end:{line:31,column:5}},{start:{line:12,column:9},end:{line:31,column:5}}],line:12},"4":{loc:{start:{line:16,column:8},end:{line:16,column:69}},type:"cond-expr",locations:[{start:{line:16,column:38},end:{line:16,column:62}},{start:{line:16,column:65},end:{line:16,column:69}}],line:16},"5":{loc:{start:{line:18,column:8},end:{line:30,column:9}},type:"if",locations:[{start:{line:18,column:8},end:{line:30,column:9}},{start:{line:18,column:8},end:{line:30,column:9}}],line:18},"6":{loc:{start:{line:38,column:69},end:{line:38,column:92}},type:"cond-expr",locations:[{start:{line:38,column:87},end:{line:38,column:88}},{start:{line:38,column:91},end:{line:38,column:92}}],line:38}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},inputSourceMap:{version:3,file:"/home/codex-coder/Documents/projects/ceasar-cypher/isbn13.ts",sources:["/home/codex-coder/Documents/projects/ceasar-cypher/isbn13.ts"],names:[],mappings:"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",sourcesContent:["export const isbn13 = (str: string | Array<any> | any) => {\n\n\n\n\n    \n    let isValid = false;\n    if (str.length === 13) {\n        str = str.split(\"\");\n        str = str.map((el: any) => parseInt(el)).map((el: any, index: any) => el * (index % 2 == 0 ? 1 : 3));\n        isValid = str.reduce((a: any, b: any) => a + b, 0) % 10 === 0;\n        return isValid ? \"Valid\" : \"Invalid\";\n\n    } else if (str.length === 10  ) {\n         // Remove any hyphens from ISBN-10\n         let counterFake = 10;\n         str = str.split(\"\");\n\n        \n        str[str.length-1] === \"X\" ? str[str.length-1] = 10 :null;\n         str = str.map(Number)\n        \n         \n\n        if( str.map((el: any) =>  parseInt(el) * counterFake--).reduce((a: any, b: any) => a + b) % 11 === 0){\n  console.log(str);\n  str = str.join().replace(/,/g,\"\");\n    // Add the prefix \"978\" to the beginning\n    const isbn13Prefix = \"978\";\n    \n    \n    const isbn13 = isbn13Prefix + str.slice(0, 9);\n//   console.log(isbn13);\n  \n    const checkDigit = calculateCheckDigit(isbn13);\n  \n    return isbn13 + checkDigit;\n\n    }else{\n        return \"Invalid\"\n    }\n};\n\n}\n\nconst calculateCheckDigit = (isbn: string) => {\n    const digitArray = isbn.split(\"\").map(Number); // Convert ISBN string to an array of digits\n    \n    // Multiply each digit by its corresponding weight (1 or 3)\n    const weightedDigits = digitArray.map((digit: number, index: number) => digit * (index % 2 === 0 ? 1 : 3));\n    \n    // Calculate the sum of all the weighted digits\n    const sum = weightedDigits.reduce((a, b) => a + b);\n    \n    // Calculate the check digit\n    const checkDigit = (10 - (sum % 10)) % 10;\n  \n    return checkDigit.toString()\n    }\n\n\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"b0b08207716f915131f1374abc12d883f241a115"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1az1wpajte=function(){return actualCoverage;};}return actualCoverage;}cov_1az1wpajte();cov_1az1wpajte().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_1az1wpajte().s[1]++;exports.isbn13=void 0;cov_1az1wpajte().s[2]++;const isbn13=str=>{cov_1az1wpajte().f[0]++;let isValid=(cov_1az1wpajte().s[3]++,false);cov_1az1wpajte().s[4]++;if(str.length===13){cov_1az1wpajte().b[0][0]++;cov_1az1wpajte().s[5]++;str=str.split("");cov_1az1wpajte().s[6]++;str=str.map(el=>{cov_1az1wpajte().f[1]++;cov_1az1wpajte().s[7]++;return parseInt(el);}).map((el,index)=>{cov_1az1wpajte().f[2]++;cov_1az1wpajte().s[8]++;return el*(index%2==0?(cov_1az1wpajte().b[1][0]++,1):(cov_1az1wpajte().b[1][1]++,3));});cov_1az1wpajte().s[9]++;isValid=str.reduce((a,b)=>{cov_1az1wpajte().f[3]++;cov_1az1wpajte().s[10]++;return a+b;},0)%10===0;cov_1az1wpajte().s[11]++;return isValid?(cov_1az1wpajte().b[2][0]++,"Valid"):(cov_1az1wpajte().b[2][1]++,"Invalid");}else{cov_1az1wpajte().b[0][1]++;cov_1az1wpajte().s[12]++;if(str.length===10){cov_1az1wpajte().b[3][0]++;// Remove any hyphens from ISBN-10
let counterFake=(cov_1az1wpajte().s[13]++,10);cov_1az1wpajte().s[14]++;str=str.split("");cov_1az1wpajte().s[15]++;str[str.length-1]==="X"?(cov_1az1wpajte().b[4][0]++,str[str.length-1]=10):(cov_1az1wpajte().b[4][1]++,null);cov_1az1wpajte().s[16]++;str=str.map(Number);cov_1az1wpajte().s[17]++;if(str.map(el=>{cov_1az1wpajte().f[4]++;cov_1az1wpajte().s[18]++;return parseInt(el)*counterFake--;}).reduce((a,b)=>{cov_1az1wpajte().f[5]++;cov_1az1wpajte().s[19]++;return a+b;})%11===0){cov_1az1wpajte().b[5][0]++;cov_1az1wpajte().s[20]++;console.log(str);cov_1az1wpajte().s[21]++;str=str.join().replace(/,/g,"");// Add the prefix "978" to the beginning
const isbn13Prefix=(cov_1az1wpajte().s[22]++,"978");const isbn13=(cov_1az1wpajte().s[23]++,isbn13Prefix+str.slice(0,9));//   console.log(isbn13);
const checkDigit=(cov_1az1wpajte().s[24]++,calculateCheckDigit(isbn13));cov_1az1wpajte().s[25]++;return isbn13+checkDigit;}else{cov_1az1wpajte().b[5][1]++;cov_1az1wpajte().s[26]++;return"Invalid";}}else{cov_1az1wpajte().b[3][1]++;}};};cov_1az1wpajte().s[27]++;exports.isbn13=isbn13;cov_1az1wpajte().s[28]++;const calculateCheckDigit=isbn=>{cov_1az1wpajte().f[6]++;const digitArray=(cov_1az1wpajte().s[29]++,isbn.split("").map(Number));// Convert ISBN string to an array of digits
// Multiply each digit by its corresponding weight (1 or 3)
const weightedDigits=(cov_1az1wpajte().s[30]++,digitArray.map((digit,index)=>{cov_1az1wpajte().f[7]++;cov_1az1wpajte().s[31]++;return digit*(index%2===0?(cov_1az1wpajte().b[6][0]++,1):(cov_1az1wpajte().b[6][1]++,3));}));// Calculate the sum of all the weighted digits
const sum=(cov_1az1wpajte().s[32]++,weightedDigits.reduce((a,b)=>{cov_1az1wpajte().f[8]++;cov_1az1wpajte().s[33]++;return a+b;}));// Calculate the check digit
const checkDigit=(cov_1az1wpajte().s[34]++,(10-sum%10)%10);cov_1az1wpajte().s[35]++;return checkDigit.toString();};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL2hvbWUvY29kZXgtY29kZXIvRG9jdW1lbnRzL3Byb2plY3RzL2NlYXNhci1jeXBoZXIvaXNibjEzLnRzIiwic291cmNlcyI6WyIvaG9tZS9jb2RleC1jb2Rlci9Eb2N1bWVudHMvcHJvamVjdHMvY2Vhc2FyLWN5cGhlci9pc2JuMTMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQU8sTUFBTSxNQUFNLEdBQUcsQ0FBQyxHQUE4QixFQUFFLEVBQUU7SUFNckQsSUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDO0lBQ3BCLElBQUksR0FBRyxDQUFDLE1BQU0sS0FBSyxFQUFFLEVBQUU7UUFDbkIsR0FBRyxHQUFHLEdBQUcsQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDcEIsR0FBRyxHQUFHLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFPLEVBQUUsRUFBRSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQU8sRUFBRSxLQUFVLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxDQUFDLEtBQUssR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDckcsT0FBTyxHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFNLEVBQUUsQ0FBTSxFQUFFLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQyxHQUFHLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDOUQsT0FBTyxPQUFPLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDO0tBRXhDO1NBQU0sSUFBSSxHQUFHLENBQUMsTUFBTSxLQUFLLEVBQUUsRUFBSTtRQUMzQixrQ0FBa0M7UUFDbEMsSUFBSSxXQUFXLEdBQUcsRUFBRSxDQUFDO1FBQ3JCLEdBQUcsR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBR3JCLEdBQUcsQ0FBQyxHQUFHLENBQUMsTUFBTSxHQUFDLENBQUMsQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxNQUFNLEdBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQSxJQUFJLENBQUM7UUFDeEQsR0FBRyxHQUFHLEdBQUcsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUE7UUFJdEIsSUFBSSxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBTyxFQUFFLEVBQUUsQ0FBRSxRQUFRLENBQUMsRUFBRSxDQUFDLEdBQUcsV0FBVyxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFNLEVBQUUsQ0FBTSxFQUFFLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsRUFBQztZQUMzRyxPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ2pCLEdBQUcsR0FBRyxHQUFHLENBQUMsSUFBSSxFQUFFLENBQUMsT0FBTyxDQUFDLElBQUksRUFBQyxFQUFFLENBQUMsQ0FBQztZQUNoQyx3Q0FBd0M7WUFDeEMsTUFBTSxZQUFZLEdBQUcsS0FBSyxDQUFDO1lBRzNCLE1BQU0sTUFBTSxHQUFHLFlBQVksR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztZQUNsRCx5QkFBeUI7WUFFckIsTUFBTSxVQUFVLEdBQUcsbUJBQW1CLENBQUMsTUFBTSxDQUFDLENBQUM7WUFFL0MsT0FBTyxNQUFNLEdBQUcsVUFBVSxDQUFDO1NBRTFCO2FBQUk7WUFDRCxPQUFPLFNBQVMsQ0FBQTtTQUNuQjtLQUNKO0lBQUEsQ0FBQztBQUVGLENBQUMsQ0FBQTtBQTNDWSxRQUFBLE1BQU0sVUEyQ2xCO0FBRUQsTUFBTSxtQkFBbUIsR0FBRyxDQUFDLElBQVksRUFBRSxFQUFFO0lBQ3pDLE1BQU0sVUFBVSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsNENBQTRDO0lBRTNGLDJEQUEyRDtJQUMzRCxNQUFNLGNBQWMsR0FBRyxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUMsS0FBYSxFQUFFLEtBQWEsRUFBRSxFQUFFLENBQUMsS0FBSyxHQUFHLENBQUMsS0FBSyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUUzRywrQ0FBK0M7SUFDL0MsTUFBTSxHQUFHLEdBQUcsY0FBYyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztJQUVuRCw0QkFBNEI7SUFDNUIsTUFBTSxVQUFVLEdBQUcsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxHQUFHLEdBQUcsRUFBRSxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUM7SUFFMUMsT0FBTyxVQUFVLENBQUMsUUFBUSxFQUFFLENBQUE7QUFDNUIsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGlzYm4xMyA9IChzdHI6IHN0cmluZyB8IEFycmF5PGFueT4gfCBhbnkpID0+IHtcblxuXG5cblxuICAgIFxuICAgIGxldCBpc1ZhbGlkID0gZmFsc2U7XG4gICAgaWYgKHN0ci5sZW5ndGggPT09IDEzKSB7XG4gICAgICAgIHN0ciA9IHN0ci5zcGxpdChcIlwiKTtcbiAgICAgICAgc3RyID0gc3RyLm1hcCgoZWw6IGFueSkgPT4gcGFyc2VJbnQoZWwpKS5tYXAoKGVsOiBhbnksIGluZGV4OiBhbnkpID0+IGVsICogKGluZGV4ICUgMiA9PSAwID8gMSA6IDMpKTtcbiAgICAgICAgaXNWYWxpZCA9IHN0ci5yZWR1Y2UoKGE6IGFueSwgYjogYW55KSA9PiBhICsgYiwgMCkgJSAxMCA9PT0gMDtcbiAgICAgICAgcmV0dXJuIGlzVmFsaWQgPyBcIlZhbGlkXCIgOiBcIkludmFsaWRcIjtcblxuICAgIH0gZWxzZSBpZiAoc3RyLmxlbmd0aCA9PT0gMTAgICkge1xuICAgICAgICAgLy8gUmVtb3ZlIGFueSBoeXBoZW5zIGZyb20gSVNCTi0xMFxuICAgICAgICAgbGV0IGNvdW50ZXJGYWtlID0gMTA7XG4gICAgICAgICBzdHIgPSBzdHIuc3BsaXQoXCJcIik7XG5cbiAgICAgICAgXG4gICAgICAgIHN0cltzdHIubGVuZ3RoLTFdID09PSBcIlhcIiA/IHN0cltzdHIubGVuZ3RoLTFdID0gMTAgOm51bGw7XG4gICAgICAgICBzdHIgPSBzdHIubWFwKE51bWJlcilcbiAgICAgICAgXG4gICAgICAgICBcblxuICAgICAgICBpZiggc3RyLm1hcCgoZWw6IGFueSkgPT4gIHBhcnNlSW50KGVsKSAqIGNvdW50ZXJGYWtlLS0pLnJlZHVjZSgoYTogYW55LCBiOiBhbnkpID0+IGEgKyBiKSAlIDExID09PSAwKXtcbiAgY29uc29sZS5sb2coc3RyKTtcbiAgc3RyID0gc3RyLmpvaW4oKS5yZXBsYWNlKC8sL2csXCJcIik7XG4gICAgLy8gQWRkIHRoZSBwcmVmaXggXCI5NzhcIiB0byB0aGUgYmVnaW5uaW5nXG4gICAgY29uc3QgaXNibjEzUHJlZml4ID0gXCI5NzhcIjtcbiAgICBcbiAgICBcbiAgICBjb25zdCBpc2JuMTMgPSBpc2JuMTNQcmVmaXggKyBzdHIuc2xpY2UoMCwgOSk7XG4vLyAgIGNvbnNvbGUubG9nKGlzYm4xMyk7XG4gIFxuICAgIGNvbnN0IGNoZWNrRGlnaXQgPSBjYWxjdWxhdGVDaGVja0RpZ2l0KGlzYm4xMyk7XG4gIFxuICAgIHJldHVybiBpc2JuMTMgKyBjaGVja0RpZ2l0O1xuXG4gICAgfWVsc2V7XG4gICAgICAgIHJldHVybiBcIkludmFsaWRcIlxuICAgIH1cbn07XG5cbn1cblxuY29uc3QgY2FsY3VsYXRlQ2hlY2tEaWdpdCA9IChpc2JuOiBzdHJpbmcpID0+IHtcbiAgICBjb25zdCBkaWdpdEFycmF5ID0gaXNibi5zcGxpdChcIlwiKS5tYXAoTnVtYmVyKTsgLy8gQ29udmVydCBJU0JOIHN0cmluZyB0byBhbiBhcnJheSBvZiBkaWdpdHNcbiAgICBcbiAgICAvLyBNdWx0aXBseSBlYWNoIGRpZ2l0IGJ5IGl0cyBjb3JyZXNwb25kaW5nIHdlaWdodCAoMSBvciAzKVxuICAgIGNvbnN0IHdlaWdodGVkRGlnaXRzID0gZGlnaXRBcnJheS5tYXAoKGRpZ2l0OiBudW1iZXIsIGluZGV4OiBudW1iZXIpID0+IGRpZ2l0ICogKGluZGV4ICUgMiA9PT0gMCA/IDEgOiAzKSk7XG4gICAgXG4gICAgLy8gQ2FsY3VsYXRlIHRoZSBzdW0gb2YgYWxsIHRoZSB3ZWlnaHRlZCBkaWdpdHNcbiAgICBjb25zdCBzdW0gPSB3ZWlnaHRlZERpZ2l0cy5yZWR1Y2UoKGEsIGIpID0+IGEgKyBiKTtcbiAgICBcbiAgICAvLyBDYWxjdWxhdGUgdGhlIGNoZWNrIGRpZ2l0XG4gICAgY29uc3QgY2hlY2tEaWdpdCA9ICgxMCAtIChzdW0gJSAxMCkpICUgMTA7XG4gIFxuICAgIHJldHVybiBjaGVja0RpZ2l0LnRvU3RyaW5nKClcbiAgICB9XG5cblxuIl19
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMWF6MXdwYWp0ZSIsImFjdHVhbENvdmVyYWdlIiwicyIsImlzYm4xMyIsInN0ciIsImYiLCJpc1ZhbGlkIiwibGVuZ3RoIiwiYiIsInNwbGl0IiwibWFwIiwiZWwiLCJwYXJzZUludCIsImluZGV4IiwicmVkdWNlIiwiYSIsImNvdW50ZXJGYWtlIiwiTnVtYmVyIiwiY29uc29sZSIsImxvZyIsImpvaW4iLCJyZXBsYWNlIiwiaXNibjEzUHJlZml4Iiwic2xpY2UiLCJjaGVja0RpZ2l0IiwiY2FsY3VsYXRlQ2hlY2tEaWdpdCIsImV4cG9ydHMiLCJpc2JuIiwiZGlnaXRBcnJheSIsIndlaWdodGVkRGlnaXRzIiwiZGlnaXQiLCJzdW0iLCJ0b1N0cmluZyJdLCJzb3VyY2VzIjpbIi9ob21lL2NvZGV4LWNvZGVyL0RvY3VtZW50cy9wcm9qZWN0cy9jZWFzYXItY3lwaGVyL2lzYm4xMy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgaXNibjEzID0gKHN0cjogc3RyaW5nIHwgQXJyYXk8YW55PiB8IGFueSkgPT4ge1xuXG5cblxuXG4gICAgXG4gICAgbGV0IGlzVmFsaWQgPSBmYWxzZTtcbiAgICBpZiAoc3RyLmxlbmd0aCA9PT0gMTMpIHtcbiAgICAgICAgc3RyID0gc3RyLnNwbGl0KFwiXCIpO1xuICAgICAgICBzdHIgPSBzdHIubWFwKChlbDogYW55KSA9PiBwYXJzZUludChlbCkpLm1hcCgoZWw6IGFueSwgaW5kZXg6IGFueSkgPT4gZWwgKiAoaW5kZXggJSAyID09IDAgPyAxIDogMykpO1xuICAgICAgICBpc1ZhbGlkID0gc3RyLnJlZHVjZSgoYTogYW55LCBiOiBhbnkpID0+IGEgKyBiLCAwKSAlIDEwID09PSAwO1xuICAgICAgICByZXR1cm4gaXNWYWxpZCA/IFwiVmFsaWRcIiA6IFwiSW52YWxpZFwiO1xuXG4gICAgfSBlbHNlIGlmIChzdHIubGVuZ3RoID09PSAxMCAgKSB7XG4gICAgICAgICAvLyBSZW1vdmUgYW55IGh5cGhlbnMgZnJvbSBJU0JOLTEwXG4gICAgICAgICBsZXQgY291bnRlckZha2UgPSAxMDtcbiAgICAgICAgIHN0ciA9IHN0ci5zcGxpdChcIlwiKTtcblxuICAgICAgICBcbiAgICAgICAgc3RyW3N0ci5sZW5ndGgtMV0gPT09IFwiWFwiID8gc3RyW3N0ci5sZW5ndGgtMV0gPSAxMCA6bnVsbDtcbiAgICAgICAgIHN0ciA9IHN0ci5tYXAoTnVtYmVyKVxuICAgICAgICBcbiAgICAgICAgIFxuXG4gICAgICAgIGlmKCBzdHIubWFwKChlbDogYW55KSA9PiAgcGFyc2VJbnQoZWwpICogY291bnRlckZha2UtLSkucmVkdWNlKChhOiBhbnksIGI6IGFueSkgPT4gYSArIGIpICUgMTEgPT09IDApe1xuICBjb25zb2xlLmxvZyhzdHIpO1xuICBzdHIgPSBzdHIuam9pbigpLnJlcGxhY2UoLywvZyxcIlwiKTtcbiAgICAvLyBBZGQgdGhlIHByZWZpeCBcIjk3OFwiIHRvIHRoZSBiZWdpbm5pbmdcbiAgICBjb25zdCBpc2JuMTNQcmVmaXggPSBcIjk3OFwiO1xuICAgIFxuICAgIFxuICAgIGNvbnN0IGlzYm4xMyA9IGlzYm4xM1ByZWZpeCArIHN0ci5zbGljZSgwLCA5KTtcbi8vICAgY29uc29sZS5sb2coaXNibjEzKTtcbiAgXG4gICAgY29uc3QgY2hlY2tEaWdpdCA9IGNhbGN1bGF0ZUNoZWNrRGlnaXQoaXNibjEzKTtcbiAgXG4gICAgcmV0dXJuIGlzYm4xMyArIGNoZWNrRGlnaXQ7XG5cbiAgICB9ZWxzZXtcbiAgICAgICAgcmV0dXJuIFwiSW52YWxpZFwiXG4gICAgfVxufTtcblxufVxuXG5jb25zdCBjYWxjdWxhdGVDaGVja0RpZ2l0ID0gKGlzYm46IHN0cmluZykgPT4ge1xuICAgIGNvbnN0IGRpZ2l0QXJyYXkgPSBpc2JuLnNwbGl0KFwiXCIpLm1hcChOdW1iZXIpOyAvLyBDb252ZXJ0IElTQk4gc3RyaW5nIHRvIGFuIGFycmF5IG9mIGRpZ2l0c1xuICAgIFxuICAgIC8vIE11bHRpcGx5IGVhY2ggZGlnaXQgYnkgaXRzIGNvcnJlc3BvbmRpbmcgd2VpZ2h0ICgxIG9yIDMpXG4gICAgY29uc3Qgd2VpZ2h0ZWREaWdpdHMgPSBkaWdpdEFycmF5Lm1hcCgoZGlnaXQ6IG51bWJlciwgaW5kZXg6IG51bWJlcikgPT4gZGlnaXQgKiAoaW5kZXggJSAyID09PSAwID8gMSA6IDMpKTtcbiAgICBcbiAgICAvLyBDYWxjdWxhdGUgdGhlIHN1bSBvZiBhbGwgdGhlIHdlaWdodGVkIGRpZ2l0c1xuICAgIGNvbnN0IHN1bSA9IHdlaWdodGVkRGlnaXRzLnJlZHVjZSgoYSwgYikgPT4gYSArIGIpO1xuICAgIFxuICAgIC8vIENhbGN1bGF0ZSB0aGUgY2hlY2sgZGlnaXRcbiAgICBjb25zdCBjaGVja0RpZ2l0ID0gKDEwIC0gKHN1bSAlIDEwKSkgJSAxMDtcbiAgXG4gICAgcmV0dXJuIGNoZWNrRGlnaXQudG9TdHJpbmcoKVxuICAgIH1cblxuXG4iXSwibWFwcGluZ3MiOiJtaVRBbUJZO0FBQUFBLGNBQUEsU0FBQUEsQ0FBQSxTQUFBQyxjQUFBLFdBQUFBLGNBQUEsRUFBQUQsY0FBQSxHQUFBQSxjQUFBLEdBQUFFLENBQUEsTSwrSEFuQkwsS0FBTSxDQUFBQyxNQUFNLENBQUlDLEdBQThCLEVBQUksQ0FBQUosY0FBQSxHQUFBSyxDQUFBLE1BTXJELEdBQUksQ0FBQUMsT0FBTyxFQUFBTixjQUFBLEdBQUFFLENBQUEsTUFBRyxLQUFLLEVBQUNGLGNBQUEsR0FBQUUsQ0FBQSxNQUNwQixHQUFJRSxHQUFHLENBQUNHLE1BQU0sR0FBSyxFQUFFLENBQUUsQ0FBQVAsY0FBQSxHQUFBUSxDQUFBLFNBQUFSLGNBQUEsR0FBQUUsQ0FBQSxNQUNuQkUsR0FBRyxDQUFHQSxHQUFHLENBQUNLLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQ1QsY0FBQSxHQUFBRSxDQUFBLE1BQ3BCRSxHQUFHLENBQUdBLEdBQUcsQ0FBQ00sR0FBRyxDQUFFQyxFQUFPLEVBQUssQ0FBQVgsY0FBQSxHQUFBSyxDQUFBLE1BQUFMLGNBQUEsR0FBQUUsQ0FBQSxhQUFBVSxRQUFRLENBQUNELEVBQUUsQ0FBQyxDQUFELENBQUMsQ0FBQyxDQUFDRCxHQUFHLENBQUMsQ0FBQ0MsRUFBTyxDQUFFRSxLQUFVLEdBQUssQ0FBQWIsY0FBQSxHQUFBSyxDQUFBLE1BQUFMLGNBQUEsR0FBQUUsQ0FBQSxhQUFBUyxFQUFFLEVBQUlFLEtBQUssQ0FBRyxDQUFDLEVBQUksQ0FBQyxFQUFBYixjQUFBLEdBQUFRLENBQUEsU0FBRyxDQUFDLEdBQUFSLGNBQUEsR0FBQVEsQ0FBQSxTQUFHLENBQUMsRUFBQyxDQUFELENBQUMsQ0FBQyxDQUFDUixjQUFBLEdBQUFFLENBQUEsTUFDckdJLE9BQU8sQ0FBR0YsR0FBRyxDQUFDVSxNQUFNLENBQUMsQ0FBQ0MsQ0FBTSxDQUFFUCxDQUFNLEdBQUssQ0FBQVIsY0FBQSxHQUFBSyxDQUFBLE1BQUFMLGNBQUEsR0FBQUUsQ0FBQSxjQUFBYSxDQUFDLENBQUdQLENBQUMsQ0FBRCxDQUFDLENBQUUsQ0FBQyxDQUFDLENBQUcsRUFBRSxHQUFLLENBQUMsQ0FBQ1IsY0FBQSxHQUFBRSxDQUFBLE9BQzlELE1BQU8sQ0FBQUksT0FBTyxFQUFBTixjQUFBLEdBQUFRLENBQUEsU0FBRyxPQUFPLEdBQUFSLGNBQUEsR0FBQVEsQ0FBQSxTQUFHLFNBQVMsRSxDQUV2QyxJQUFNLENBQUFSLGNBQUEsR0FBQVEsQ0FBQSxTQUFBUixjQUFBLEdBQUFFLENBQUEsVUFBSUUsR0FBRyxDQUFDRyxNQUFNLEdBQUssRUFBRSxDQUFJLENBQUFQLGNBQUEsR0FBQVEsQ0FBQSxTQUMzQjtBQUNBLEdBQUksQ0FBQVEsV0FBVyxFQUFBaEIsY0FBQSxHQUFBRSxDQUFBLE9BQUcsRUFBRSxFQUFDRixjQUFBLEdBQUFFLENBQUEsT0FDckJFLEdBQUcsQ0FBR0EsR0FBRyxDQUFDSyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUNULGNBQUEsR0FBQUUsQ0FBQSxPQUdyQkUsR0FBRyxDQUFDQSxHQUFHLENBQUNHLE1BQU0sQ0FBQyxDQUFDLENBQUMsR0FBSyxHQUFHLEVBQUFQLGNBQUEsR0FB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
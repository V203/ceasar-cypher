{"version":3,"file":"/home/codex-coder/Documents/projects/ceasar-cypher/isbn13.ts","sources":["/home/codex-coder/Documents/projects/ceasar-cypher/isbn13.ts"],"names":[],"mappings":";;;AAAO,IAAI,MAAM,GAAG,CAAC,GAA8B,EAAE,EAAE;IAGnD,IAAI,YAAY,GAAG,EAAE,CAAA;IAErB,IAAI,UAAU,GAAY,KAAK,CAAA;IAG/B,IAAI,GAAG,CAAC,MAAM,KAAK,EAAE,EAAE;QACnB,GAAG,GAAG,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC9B,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QAEpB,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,GAAG,CAAC,MAAM,GAAG,KAAK,EAAE,KAAK,EAAE,EAAE;YAC7C,UAAU,GAAG,CAAC,UAAU,CAAA;YACxB,YAAY,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;SAEpE;QAED,IAAI,CAAC,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC7C,IAAI,WAAW,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAA;QACtC,GAAG,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAA;QAClC,OAAO,GAAG,GAAG,WAAW,CAAC,QAAQ,EAAE,CAAC;KACvC;SAAM;QACH,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAA;QACnB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAGjB,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,GAAG,CAAC,MAAM,GAAG,KAAK,EAAE,KAAK,EAAE,EAAE;YAC7C,UAAU,GAAG,CAAC,UAAU,CAAA;YACxB,YAAY,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;SAEpE;QACT,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAA;QACpD,IAAI,CAAC,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC7C,IAAI,WAAW,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAA;KAGzC;AAML,CAAC,CAAA;AA3CU,QAAA,MAAM,UA2ChB","sourcesContent":["export let isbn13 = (str: string | Array<any> | any) => {\n\n\n    let strContainer = []\n\n    let weightBool: boolean = false\n\n\n    if (str.length === 10) {\n        str = \"978\" + str.slice(0, 9);\n        str = str.split(\"\");\n\n        for (let index = 0; str.length > index; index++) {\n            weightBool = !weightBool\n            strContainer[index] = parseInt(str[index]) * (weightBool ? 1 : 3)\n\n        }\n\n        let c = strContainer.reduce((a, b) => a + b);\n        let check_digit = (10 - (c % 10)) % 10\n        str = str.join().replace(/,/g, \"\")\n        return str + check_digit.toString();\n    } else {\n        str = str.split(\"\")\n        console.log(str);\n\n\n        for (let index = 0; str.length > index; index++) {\n            weightBool = !weightBool\n            strContainer[index] = parseInt(str[index]) * (weightBool ? 1 : 3)\n\n        }\nconsole.log(strContainer.reduce((a, b) => a + b) % 11 === 0)\n        let c = strContainer.reduce((a, b) => a + b);\n        let check_digit = (10 - (c % 10)) % 10\n\n\n    }\n\n\n\n\n\n}"]}
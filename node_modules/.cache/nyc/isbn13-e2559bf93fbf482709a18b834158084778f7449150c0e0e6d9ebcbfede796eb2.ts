"use strict";function cov_1az1wpajte(){var path="/home/codex-coder/Documents/projects/ceasar-cypher/isbn13.ts";var hash="22850486279e695d279d37fc822f87a1e7b7d440";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/codex-coder/Documents/projects/ceasar-cypher/isbn13.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:0},end:{line:3,column:24}},"2":{start:{line:4,column:15},end:{line:14,column:1}},"3":{start:{line:5,column:16},end:{line:5,column:18}},"4":{start:{line:6,column:21},end:{line:6,column:34}},"5":{start:{line:7,column:4},end:{line:13,column:5}},"6":{start:{line:8,column:8},end:{line:8,column:98}},"7":{start:{line:9,column:27},end:{line:9,column:68}},"8":{start:{line:9,column:50},end:{line:9,column:67}},"9":{start:{line:11,column:21},end:{line:11,column:116}},"10":{start:{line:11,column:46},end:{line:11,column:58}},"11":{start:{line:11,column:77},end:{line:11,column:82}},"12":{start:{line:12,column:8},end:{line:12,column:22}},"13":{start:{line:15,column:0},end:{line:15,column:24}},"14":{start:{line:16,column:0},end:{line:16,column:47}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:4,column:15},end:{line:4,column:16}},loc:{start:{line:4,column:24},end:{line:14,column:1}},line:4},"1":{name:"(anonymous_1)",decl:{start:{line:9,column:42},end:{line:9,column:43}},loc:{start:{line:9,column:50},end:{line:9,column:67}},line:9},"2":{name:"(anonymous_2)",decl:{start:{line:11,column:38},end:{line:11,column:39}},loc:{start:{line:11,column:46},end:{line:11,column:58}},line:11},"3":{name:"(anonymous_3)",decl:{start:{line:11,column:67},end:{line:11,column:68}},loc:{start:{line:11,column:77},end:{line:11,column:82}},line:11}},branchMap:{"0":{loc:{start:{line:7,column:4},end:{line:13,column:5}},type:"if",locations:[{start:{line:7,column:4},end:{line:13,column:5}},{start:{line:7,column:4},end:{line:13,column:5}}],line:7},"1":{loc:{start:{line:8,column:8},end:{line:8,column:97}},type:"cond-expr",locations:[{start:{line:8,column:52},end:{line:8,column:90}},{start:{line:8,column:93},end:{line:8,column:97}}],line:8},"2":{loc:{start:{line:11,column:21},end:{line:11,column:116}},type:"cond-expr",locations:[{start:{line:11,column:97},end:{line:11,column:104}},{start:{line:11,column:107},end:{line:11,column:116}}],line:11}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},f:{"0":0,"1":0,"2":0,"3":0},b:{"0":[0,0],"1":[0,0],"2":[0,0]},inputSourceMap:{version:3,file:"/home/codex-coder/Documents/projects/ceasar-cypher/isbn13.ts",sources:["/home/codex-coder/Documents/projects/ceasar-cypher/isbn13.ts"],names:[],mappings:";;;AAAO,MAAM,MAAM,GAAG,CAAC,GAA8B,EAAE,EAAE;IAErD,IAAI,KAAK,GAAG,EAAE,CAAC;IACf,IAAI,UAAU,GAAE,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IAC9B,IAAG,GAAG,CAAC,MAAM,KAAK,EAAE,EAAC;QAEjB,UAAU,CAAC,UAAU,CAAC,MAAM,GAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,GAAC,CAAC,CAAC,GAAI,EAAE,CAAC,CAAC,CAAA,IAAI,CAAC;QACtF,IAAI,YAAY,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,EAAM,EAAE,EAAE,CAAC,EAAE,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAA;QAEhE,8BAA8B;QAG1B,IAAI,MAAM,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC,EAAM,EAAC,EAAE,CAAC,EAAE,GAAG,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAK,EAAC,CAAK,EAAC,EAAE,CAAA,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC,CAAE,OAAO,CAAA,CAAC,CAAA,SAAS,CAAC;QAKxH,OAAO,MAAM,CAAA;KAChB;AAEL,CAAC,CAAC;AApBW,QAAA,MAAM,UAoBjB;AAGF,OAAO,CAAC,GAAG,CAAC,IAAA,cAAM,EAAC,YAAY,CAAC,CAAC,CAAA",sourcesContent:["export const isbn13 = (str: string | Array<any> | any) => {\n\n    let count = 10;\n    let splitedStr= str.split(\"\");\n    if(str.length === 10){\n\n        splitedStr[splitedStr.length-1] === \"X\" ? splitedStr[splitedStr.length-1] =  10 :null;\n        let convertedstr = splitedStr.map((el:any) => el = parseInt(el))\n        \n        // convertedstr.unshift(9,7,8)\n        \n        \n            let result = convertedstr.map((el:any)=> el * count--).reduce((a:any,b:any)=>a + b) % 11 === 0 ?  \"Valid\":\"Invalid\";\n    \n            \n    \n    \n        return result\n    }\n    \n};\n\n\nconsole.log(isbn13(\"0330301624\"))\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"22850486279e695d279d37fc822f87a1e7b7d440"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1az1wpajte=function(){return actualCoverage;};}return actualCoverage;}cov_1az1wpajte();cov_1az1wpajte().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_1az1wpajte().s[1]++;exports.isbn13=void 0;cov_1az1wpajte().s[2]++;const isbn13=str=>{cov_1az1wpajte().f[0]++;let count=(cov_1az1wpajte().s[3]++,10);let splitedStr=(cov_1az1wpajte().s[4]++,str.split(""));cov_1az1wpajte().s[5]++;if(str.length===10){cov_1az1wpajte().b[0][0]++;cov_1az1wpajte().s[6]++;splitedStr[splitedStr.length-1]==="X"?(cov_1az1wpajte().b[1][0]++,splitedStr[splitedStr.length-1]=10):(cov_1az1wpajte().b[1][1]++,null);let convertedstr=(cov_1az1wpajte().s[7]++,splitedStr.map(el=>{cov_1az1wpajte().f[1]++;cov_1az1wpajte().s[8]++;return el=parseInt(el);}));// convertedstr.unshift(9,7,8)
let result=(cov_1az1wpajte().s[9]++,convertedstr.map(el=>{cov_1az1wpajte().f[2]++;cov_1az1wpajte().s[10]++;return el*count--;}).reduce((a,b)=>{cov_1az1wpajte().f[3]++;cov_1az1wpajte().s[11]++;return a+b;})%11===0?(cov_1az1wpajte().b[2][0]++,"Valid"):(cov_1az1wpajte().b[2][1]++,"Invalid"));cov_1az1wpajte().s[12]++;return result;}else{cov_1az1wpajte().b[0][1]++;}};cov_1az1wpajte().s[13]++;exports.isbn13=isbn13;cov_1az1wpajte().s[14]++;console.log((0,exports.isbn13)("0330301624"));//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL2hvbWUvY29kZXgtY29kZXIvRG9jdW1lbnRzL3Byb2plY3RzL2NlYXNhci1jeXBoZXIvaXNibjEzLnRzIiwic291cmNlcyI6WyIvaG9tZS9jb2RleC1jb2Rlci9Eb2N1bWVudHMvcHJvamVjdHMvY2Vhc2FyLWN5cGhlci9pc2JuMTMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQU8sTUFBTSxNQUFNLEdBQUcsQ0FBQyxHQUE4QixFQUFFLEVBQUU7SUFFckQsSUFBSSxLQUFLLEdBQUcsRUFBRSxDQUFDO0lBQ2YsSUFBSSxVQUFVLEdBQUUsR0FBRyxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUM5QixJQUFHLEdBQUcsQ0FBQyxNQUFNLEtBQUssRUFBRSxFQUFDO1FBRWpCLFVBQVUsQ0FBQyxVQUFVLENBQUMsTUFBTSxHQUFDLENBQUMsQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLFVBQVUsQ0FBQyxNQUFNLEdBQUMsQ0FBQyxDQUFDLEdBQUksRUFBRSxDQUFDLENBQUMsQ0FBQSxJQUFJLENBQUM7UUFDdEYsSUFBSSxZQUFZLEdBQUcsVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQU0sRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFBO1FBRWhFLDhCQUE4QjtRQUcxQixJQUFJLE1BQU0sR0FBRyxZQUFZLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBTSxFQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsS0FBSyxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFLLEVBQUMsQ0FBSyxFQUFDLEVBQUUsQ0FBQSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUUsT0FBTyxDQUFBLENBQUMsQ0FBQSxTQUFTLENBQUM7UUFLeEgsT0FBTyxNQUFNLENBQUE7S0FDaEI7QUFFTCxDQUFDLENBQUM7QUFwQlcsUUFBQSxNQUFNLFVBb0JqQjtBQUdGLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBQSxjQUFNLEVBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBpc2JuMTMgPSAoc3RyOiBzdHJpbmcgfCBBcnJheTxhbnk+IHwgYW55KSA9PiB7XG5cbiAgICBsZXQgY291bnQgPSAxMDtcbiAgICBsZXQgc3BsaXRlZFN0cj0gc3RyLnNwbGl0KFwiXCIpO1xuICAgIGlmKHN0ci5sZW5ndGggPT09IDEwKXtcblxuICAgICAgICBzcGxpdGVkU3RyW3NwbGl0ZWRTdHIubGVuZ3RoLTFdID09PSBcIlhcIiA/IHNwbGl0ZWRTdHJbc3BsaXRlZFN0ci5sZW5ndGgtMV0gPSAgMTAgOm51bGw7XG4gICAgICAgIGxldCBjb252ZXJ0ZWRzdHIgPSBzcGxpdGVkU3RyLm1hcCgoZWw6YW55KSA9PiBlbCA9IHBhcnNlSW50KGVsKSlcbiAgICAgICAgXG4gICAgICAgIC8vIGNvbnZlcnRlZHN0ci51bnNoaWZ0KDksNyw4KVxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBsZXQgcmVzdWx0ID0gY29udmVydGVkc3RyLm1hcCgoZWw6YW55KT0+IGVsICogY291bnQtLSkucmVkdWNlKChhOmFueSxiOmFueSk9PmEgKyBiKSAlIDExID09PSAwID8gIFwiVmFsaWRcIjpcIkludmFsaWRcIjtcbiAgICBcbiAgICAgICAgICAgIFxuICAgIFxuICAgIFxuICAgICAgICByZXR1cm4gcmVzdWx0XG4gICAgfVxuICAgIFxufTtcblxuXG5jb25zb2xlLmxvZyhpc2JuMTMoXCIwMzMwMzAxNjI0XCIpKVxuIl19
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMWF6MXdwYWp0ZSIsImFjdHVhbENvdmVyYWdlIiwicyIsImlzYm4xMyIsInN0ciIsImYiLCJjb3VudCIsInNwbGl0ZWRTdHIiLCJzcGxpdCIsImxlbmd0aCIsImIiLCJjb252ZXJ0ZWRzdHIiLCJtYXAiLCJlbCIsInBhcnNlSW50IiwicmVzdWx0IiwicmVkdWNlIiwiYSIsImV4cG9ydHMiLCJjb25zb2xlIiwibG9nIl0sInNvdXJjZXMiOlsiL2hvbWUvY29kZXgtY29kZXIvRG9jdW1lbnRzL3Byb2plY3RzL2NlYXNhci1jeXBoZXIvaXNibjEzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBpc2JuMTMgPSAoc3RyOiBzdHJpbmcgfCBBcnJheTxhbnk+IHwgYW55KSA9PiB7XG5cbiAgICBsZXQgY291bnQgPSAxMDtcbiAgICBsZXQgc3BsaXRlZFN0cj0gc3RyLnNwbGl0KFwiXCIpO1xuICAgIGlmKHN0ci5sZW5ndGggPT09IDEwKXtcblxuICAgICAgICBzcGxpdGVkU3RyW3NwbGl0ZWRTdHIubGVuZ3RoLTFdID09PSBcIlhcIiA/IHNwbGl0ZWRTdHJbc3BsaXRlZFN0ci5sZW5ndGgtMV0gPSAgMTAgOm51bGw7XG4gICAgICAgIGxldCBjb252ZXJ0ZWRzdHIgPSBzcGxpdGVkU3RyLm1hcCgoZWw6YW55KSA9PiBlbCA9IHBhcnNlSW50KGVsKSlcbiAgICAgICAgXG4gICAgICAgIC8vIGNvbnZlcnRlZHN0ci51bnNoaWZ0KDksNyw4KVxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBsZXQgcmVzdWx0ID0gY29udmVydGVkc3RyLm1hcCgoZWw6YW55KT0+IGVsICogY291bnQtLSkucmVkdWNlKChhOmFueSxiOmFueSk9PmEgKyBiKSAlIDExID09PSAwID8gIFwiVmFsaWRcIjpcIkludmFsaWRcIjtcbiAgICBcbiAgICAgICAgICAgIFxuICAgIFxuICAgIFxuICAgICAgICByZXR1cm4gcmVzdWx0XG4gICAgfVxuICAgIFxufTtcblxuXG5jb25zb2xlLmxvZyhpc2JuMTMoXCIwMzMwMzAxNjI0XCIpKVxuIl0sIm1hcHBpbmdzIjoiK3lJQXVCWTtBQUFBQSxjQUFBLFNBQUFBLENBQUEsU0FBQUMsY0FBQSxXQUFBQSxjQUFBLEVBQUFELGNBQUEsR0FBQUEsY0FBQSxHQUFBRSxDQUFBLE0sK0hBdkJMLEtBQU0sQ0FBQUMsTUFBTSxDQUFJQyxHQUE4QixFQUFJLENBQUFKLGNBQUEsR0FBQUssQ0FBQSxNQUVyRCxHQUFJLENBQUFDLEtBQUssRUFBQU4sY0FBQSxHQUFBRSxDQUFBLE1BQUcsRUFBRSxFQUNkLEdBQUksQ0FBQUssVUFBVSxFQUFBUCxjQUFBLEdBQUFFLENBQUEsTUFBRUUsR0FBRyxDQUFDSSxLQUFLLENBQUMsRUFBRSxDQUFDLEVBQUNSLGNBQUEsR0FBQUUsQ0FBQSxNQUM5QixHQUFHRSxHQUFHLENBQUNLLE1BQU0sR0FBSyxFQUFFLENBQUMsQ0FBQVQsY0FBQSxHQUFBVSxDQUFBLFNBQUFWLGNBQUEsR0FBQUUsQ0FBQSxNQUVqQkssVUFBVSxDQUFDQSxVQUFVLENBQUNFLE1BQU0sQ0FBQyxDQUFDLENBQUMsR0FBSyxHQUFHLEVBQUFULGNBQUEsR0FBQVUsQ0FBQSxTQUFHSCxVQUFVLENBQUNBLFVBQVUsQ0FBQ0UsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFJLEVBQUUsR0FBQVQsY0FBQSxHQUFBVSxDQUFBLFNBQUUsSUFBSSxFQUNyRixHQUFJLENBQUFDLFlBQVksRUFBQVgsY0FBQSxHQUFBRSxDQUFBLE1BQUdLLFVBQVUsQ0FBQ0ssR0FBRyxDQUFFQyxFQUFNLEVBQUssQ0FBQWIsY0FBQSxHQUFBSyxDQUFBLE1BQUFMLGNBQUEsR0FBQUUsQ0FBQSxhQUFBVyxFQUFFLENBQUdDLFFBQVEsQ0FBQ0QsRUFBRSxDQUFDLENBQUQsQ0FBQyxDQUFDLEVBRWhFO0FBR0ksR0FBSSxDQUFBRSxNQUFNLEVBQUFmLGNBQUEsR0FBQUUsQ0FBQSxNQUFHUyxZQUFZLENBQUNDLEdBQUcsQ0FBRUMsRUFBTSxFQUFJLENBQUFiLGNBQUEsR0FBQUssQ0FBQSxNQUFBTCxjQUFBLEdBQUFFLENBQUEsY0FBQVcsRUFBRSxDQUFHUCxLQUFLLEVBQUUsQ0FBRixDQUFFLENBQUMsQ0FBQ1UsTUFBTSxDQUFDLENBQUNDLENBQUssQ0FBQ1AsQ0FBSyxHQUFHLENBQUFWLGNBQUEsR0FBQUssQ0FBQSxNQUFBTCxjQUFBLEdBQUFFLENBQUEsY0FBQWUsQ0FBQyxDQUFHUCxDQUFDLENBQUQsQ0FBQyxDQUFDLENBQUcsRUFBRSxHQUFLLENBQUMsRUFBQVYsY0FBQSxHQUFBVSxDQUFBLFNBQUksT0FBTyxHQUFBVixjQUFBLEdBQUFVLENBQUEsU0FBQyxTQUFTLEdBQUNWLGNBQUEsR0FBQUUsQ0FBQSxPQUt4SCxNQUFPLENBQUFhLE1BQU0sQyxDQUNoQixLQUFBZixjQUFBLEdBQUFVLENBQUEsVUFFTCxDQUFDLENBQUNWLGNBQUEsR0FBQUUsQ0FBQSxPQXBCV2dCLE9BQUEsQ0FBQWYsTUFBTSxDQUFBQSxNQUFBLENBb0JqQkgsY0FBQSxHQUFBRSxDQUFBLE9BR0ZpQixPQUFPLENBQUNDLEdBQUcsQ0FBQyxHQUFBRixPQUFBLENBQUFmLE1BQU0sRUFBQyxZQUFZLENBQUMsQ0FBQyxDIn0=